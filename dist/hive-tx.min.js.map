{"version":3,"file":"hive-tx.min.js","mappings":"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","sources":["webpack://hiveTx/webpack/universalModuleDefinition","webpack://hiveTx/./node_modules/process/browser.js","webpack://hiveTx/webpack/bootstrap","webpack://hiveTx/webpack/runtime/define property getters","webpack://hiveTx/webpack/runtime/hasOwnProperty shorthand","webpack://hiveTx/webpack/runtime/make namespace object","webpack://hiveTx/./helpers/ByteBuffer.js","webpack://hiveTx/./config.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/_assert.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/crypto.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/utils.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/_md.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/sha256.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/_u64.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/sha512.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/ripemd160.js","webpack://hiveTx/./helpers/crypto.js","webpack://hiveTx/./node_modules/bs58/src/esm/index.js","webpack://hiveTx/./node_modules/base-x/src/esm/index.js","webpack://hiveTx/./node_modules/@noble/hashes/esm/hmac.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/utils.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://hiveTx/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://hiveTx/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://hiveTx/./node_modules/@noble/curves/esm/secp256k1.js","webpack://hiveTx/./helpers/PublicKey.js","webpack://hiveTx/./helpers/Asset.js","webpack://hiveTx/./helpers/uint8Array.js","webpack://hiveTx/./helpers/HexBuffer.js","webpack://hiveTx/./helpers/serializer.js","webpack://hiveTx/./transactions/signTransaction.js","webpack://hiveTx/./node_modules/axios/lib/helpers/bind.js","webpack://hiveTx/./node_modules/axios/lib/utils.js","webpack://hiveTx/./node_modules/axios/lib/core/AxiosError.js","webpack://hiveTx/./node_modules/axios/lib/helpers/toFormData.js","webpack://hiveTx/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://hiveTx/./node_modules/axios/lib/helpers/buildURL.js","webpack://hiveTx/./node_modules/axios/lib/core/InterceptorManager.js","webpack://hiveTx/./node_modules/axios/lib/defaults/transitional.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/index.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://hiveTx/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://hiveTx/./node_modules/axios/lib/platform/common/utils.js","webpack://hiveTx/./node_modules/axios/lib/platform/index.js","webpack://hiveTx/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://hiveTx/./node_modules/axios/lib/defaults/index.js","webpack://hiveTx/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://hiveTx/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://hiveTx/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://hiveTx/./node_modules/axios/lib/core/transformData.js","webpack://hiveTx/./node_modules/axios/lib/cancel/isCancel.js","webpack://hiveTx/./node_modules/axios/lib/cancel/CanceledError.js","webpack://hiveTx/./node_modules/axios/lib/core/settle.js","webpack://hiveTx/./node_modules/axios/lib/helpers/speedometer.js","webpack://hiveTx/./node_modules/axios/lib/helpers/progressEventReducer.js","webpack://hiveTx/./node_modules/axios/lib/helpers/throttle.js","webpack://hiveTx/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://hiveTx/./node_modules/axios/lib/helpers/cookies.js","webpack://hiveTx/./node_modules/axios/lib/core/buildFullPath.js","webpack://hiveTx/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://hiveTx/./node_modules/axios/lib/helpers/combineURLs.js","webpack://hiveTx/./node_modules/axios/lib/core/mergeConfig.js","webpack://hiveTx/./node_modules/axios/lib/helpers/resolveConfig.js","webpack://hiveTx/./node_modules/axios/lib/adapters/xhr.js","webpack://hiveTx/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://hiveTx/./node_modules/axios/lib/helpers/composeSignals.js","webpack://hiveTx/./node_modules/axios/lib/helpers/trackStream.js","webpack://hiveTx/./node_modules/axios/lib/adapters/fetch.js","webpack://hiveTx/./node_modules/axios/lib/adapters/adapters.js","webpack://hiveTx/./node_modules/axios/lib/helpers/null.js","webpack://hiveTx/./node_modules/axios/lib/core/dispatchRequest.js","webpack://hiveTx/./node_modules/axios/lib/env/data.js","webpack://hiveTx/./node_modules/axios/lib/helpers/validator.js","webpack://hiveTx/./node_modules/axios/lib/core/Axios.js","webpack://hiveTx/./node_modules/axios/lib/cancel/CancelToken.js","webpack://hiveTx/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://hiveTx/./node_modules/axios/lib/axios.js","webpack://hiveTx/./node_modules/axios/lib/helpers/spread.js","webpack://hiveTx/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://hiveTx/./helpers/call.js","webpack://hiveTx/./helpers/Signature.js","webpack://hiveTx/./helpers/PrivateKey.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/_assert.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/utils.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/_polyval.js","webpack://hiveTx/./node_modules/@noble/ciphers/esm/aes.js","webpack://hiveTx/./helpers/aes.js","webpack://hiveTx/./helpers/deserializer.js","webpack://hiveTx/./helpers/memo.js","webpack://hiveTx/./helpers/utils.js","webpack://hiveTx/./index.js","webpack://hiveTx/./transactions/createTransaction.js","webpack://hiveTx/./helpers/globalProps.js","webpack://hiveTx/./transactions/broadcastTransaction.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hiveTx\"] = factory();\n\telse\n\t\troot[\"hiveTx\"] = factory();\n})(this, () => {\nreturn ","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\n\n * Backing buffer: ArrayBuffer, Accessor: DataView\n\n * Released under the Apache License, Version 2.0\n\n * see: https://github.com/dcodeIO/bytebuffer.js for details\n\n * modified by @xmcl/bytebuffer\n\n * And customized for hive-tx\n\n */\n\nexport class ByteBuffer {\n  /**\n\n   * ByteBuffer version.\n\n   * @type {string}\n\n   * @const\n\n   * @expose\n\n   */\n\n  static VERSION = '0.0.1'\n\n  /**\n\n   * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\n\n   * @type {boolean}\n\n   * @const\n\n   * @expose\n\n   */\n\n  static LITTLE_ENDIAN = true\n\n  /**\n\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\n\n     * @type {boolean}\n\n     * @const\n\n     * @expose\n\n     */\n\n  static BIG_ENDIAN = false\n\n  /**\n\n     * Default initial capacity of `16`.\n\n     * @type {number}\n\n     * @expose\n\n     */\n\n  static DEFAULT_CAPACITY = 16\n\n  /**\n\n     * Default endianess of `false` for big endian.\n\n     * @type {boolean}\n\n     * @expose\n\n     */\n\n  static DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN\n\n  /**\n\n     * Default no assertions flag of `false`.\n\n     * @type {boolean}\n\n     * @expose\n\n     */\n\n  static DEFAULT_NOASSERT = false\n\n  /**\n\n     * Backing ArrayBuffer.\n\n     * @type {!ArrayBuffer}\n\n     * @expose\n\n     */\n\n  /**\n     * Metrics representing number of bytes. Evaluates to `b`.\n     * @type {string}\n     * @const\n     * @expose\n     */\n  static METRICS_BYTES = 'b'\n\n  buffer\n\n  /**\n\n     * DataView utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.\n\n     * @type {?DataView}\n\n     * @expose\n\n     */\n\n  view\n\n  /**\n\n     * Absolute read/write offset.\n\n     * @type {number}\n\n     * @expose\n\n     * @see ByteBuffer#flip\n\n     * @see ByteBuffer#clear\n\n     */\n\n  offset\n\n  /**\n\n     * Marked offset.\n\n     * @type {number}\n\n     * @expose\n\n     * @see ByteBuffer#mark\n\n     * @see ByteBuffer#reset\n\n     */\n\n  markedOffset\n\n  /**\n\n     * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\n\n     * @type {number}\n\n     * @expose\n\n     * @see ByteBuffer#flip\n\n     * @see ByteBuffer#clear\n\n     */\n\n  limit\n\n  /**\n\n     * Whether to use little endian byte order, defaults to `false` for big endian.\n\n     * @type {boolean}\n\n     * @expose\n\n     */\n\n  littleEndian\n\n  /**\n\n     * Whether to skip assertions of offsets and values, defaults to `false`.\n\n     * @type {boolean}\n\n     * @expose\n\n     */\n\n  noAssert\n\n  /**\n\n     * Constructs a new ByteBuffer.\n\n     * @class The swiss army knife for binary data in JavaScript.\n\n     * @exports ByteBuffer\n\n     * @constructor\n\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\n\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n\n     * @expose\n\n     */\n\n  constructor (capacity, littleEndian, noAssert) {\n    if (typeof capacity === 'undefined') {\n      capacity = ByteBuffer.DEFAULT_CAPACITY\n    }\n\n    if (typeof littleEndian === 'undefined') {\n      littleEndian = ByteBuffer.DEFAULT_ENDIAN\n    }\n\n    if (typeof noAssert === 'undefined') {\n      noAssert = ByteBuffer.DEFAULT_NOASSERT\n    }\n\n    if (!noAssert) {\n      capacity = capacity | 0\n\n      if (capacity < 0) {\n        throw RangeError('Illegal capacity')\n      }\n\n      littleEndian = !!littleEndian\n\n      noAssert = !!noAssert\n    }\n\n    this.buffer = capacity === 0 ? EMPTY_BUFFER : new ArrayBuffer(capacity)\n\n    this.view = capacity === 0 ? new DataView(EMPTY_BUFFER) : new DataView(this.buffer)\n\n    this.offset = 0\n\n    this.markedOffset = -1\n\n    this.limit = capacity\n\n    this.littleEndian = littleEndian\n\n    this.noAssert = noAssert\n  }\n\n  /**\n\n     * Gets the accessor type.\n\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\n\n     * @expose\n\n     */\n\n  static accessor = function () {\n    return DataView\n  }\n\n  /**\n\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\n\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\n\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n\n     * @returns {!ByteBuffer}\n\n     * @expose\n\n     */\n\n  static allocate = function (capacity, littleEndian, noAssert) {\n    return new ByteBuffer(capacity, littleEndian, noAssert)\n  }\n\n  /**\n\n     * Concatenates multiple ByteBuffers into one.\n\n     * @param {!Array.<!ByteBuffer|!ArrayBuffer|!Uint8Array>} buffers Buffers to concatenate\n\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\n\n     *  defaults to \"utf8\")\n\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\n\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\n\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\n\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\n\n     * @expose\n\n     */\n\n  static concat = function (buffers, littleEndian, noAssert) {\n    let capacity = 0\n\n    const k = buffers.length\n\n    let length\n\n    for (let i2 = 0, length2; i2 < k; ++i2) {\n      const buf = buffers[i2]\n\n      if (!(buf instanceof ByteBuffer)) {\n        buffers[i2] = ByteBuffer.wrap(buf)\n      }\n\n      length2 = buffers[i2].limit - buffers[i2].offset\n\n      if (length2 > 0) {\n        capacity += length2\n      }\n    }\n\n    if (capacity === 0) {\n      return new ByteBuffer(0, littleEndian, noAssert)\n    }\n\n    const bb = new ByteBuffer(capacity, littleEndian, noAssert)\n\n    let bi\n\n    const view = new Uint8Array(bb.buffer)\n\n    let i = 0\n\n    while (i < k) {\n      bi = buffers[i++]\n\n      length = bi.limit - bi.offset\n\n      if (length <= 0) {\n        continue\n      }\n\n      view.set(new Uint8Array(bi.buffer).subarray(bi.offset, bi.limit), bb.offset)\n\n      bb.offset += length\n    }\n\n    bb.limit = bb.offset\n\n    bb.offset = 0\n\n    return bb\n  }\n\n  /**\n\n     * Gets the backing buffer type.\n\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\n\n     * @expose\n\n     */\n\n  static type = function () {\n    return ArrayBuffer\n  }\n\n  /**\n\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\n\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\n\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\n\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\n\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\n\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\n\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\n\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\n\n     * @expose\n\n     */\n\n  static wrap = function (buffer, littleEndian, noAssert) {\n    if (buffer === null || typeof buffer !== 'object') {\n      throw TypeError('Illegal buffer')\n    }\n\n    let bb\n\n    if (buffer instanceof ByteBuffer) {\n      bb = buffer.clone()\n\n      bb.markedOffset = -1\n\n      return bb\n    }\n\n    if (buffer instanceof Uint8Array) {\n      bb = new ByteBuffer(0, littleEndian, noAssert)\n\n      if (buffer.length > 0) {\n        bb.buffer = buffer.buffer\n\n        bb.offset = buffer.byteOffset\n\n        bb.limit = buffer.byteOffset + buffer.byteLength\n\n        bb.view = new DataView(buffer.buffer)\n      }\n    } else if (buffer instanceof ArrayBuffer) {\n      bb = new ByteBuffer(0, littleEndian, noAssert)\n\n      if (buffer.byteLength > 0) {\n        bb.buffer = buffer\n\n        bb.offset = 0\n\n        bb.limit = buffer.byteLength\n\n        bb.view = buffer.byteLength > 0 ? new DataView(buffer) : new DataView(EMPTY_BUFFER)\n      }\n    } else if (Object.prototype.toString.call(buffer) === '[object Array]') {\n      bb = new ByteBuffer(buffer.length, littleEndian, noAssert)\n\n      bb.limit = buffer.length\n\n      for (let i = 0; i < buffer.length; ++i) {\n        bb.view.setUint8(i, buffer[i])\n      }\n    } else {\n      throw TypeError('Illegal buffer')\n    }\n\n    return bb\n  }\n\n  /**\n\n     * Reads the specified number of bytes.\n\n     * @param {number} length Number of bytes to read\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\n\n     * @returns {!ByteBuffer}\n\n     * @expose\n\n     */\n\n  readBytes (length, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + length > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+' + length + ') <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const slice = this.slice(offset, offset + length)\n\n    if (relative) {\n      this.offset += length\n    }\n\n    return slice\n  }\n\n  /**\n\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\n\n     * @function\n\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its offsets\n\n     *  will be modified according to the performed read operation.\n\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n\n     *  written if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeBytes = this.append\n\n  // types/ints/int8\n\n  /**\n\n     * Writes an 8bit signed integer.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeInt8 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) {\n        throw TypeError('Illegal value: ' + value + ' (not an integer)')\n      }\n\n      value |= 0\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 1\n\n    let capacity0 = this.buffer.byteLength\n\n    if (offset > capacity0) {\n      this.resize((capacity0 *= 2) > offset ? capacity0 : offset)\n    }\n\n    offset -= 1\n\n    this.view.setInt8(offset, value)\n\n    if (relative) {\n      this.offset += 1\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\n\n     * @function\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeByte = this.writeInt8\n\n  /**\n\n     * Reads an 8bit signed integer.\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readInt8 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 1 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+1) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getInt8(offset)\n\n    if (relative) {\n      this.offset += 1\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readByte = this.readInt8\n\n  /**\n\n     * Writes an 8bit unsigned integer.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeUint8 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) {\n        throw TypeError('Illegal value: ' + value + ' (not an integer)')\n      }\n\n      value >>>= 0\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 1\n\n    let capacity1 = this.buffer.byteLength\n\n    if (offset > capacity1) {\n      this.resize((capacity1 *= 2) > offset ? capacity1 : offset)\n    }\n\n    offset -= 1\n\n    this.view.setUint8(offset, value)\n\n    if (relative) {\n      this.offset += 1\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\n\n     * @function\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeUInt8 = this.writeUint8\n\n  /**\n\n     * Reads an 8bit unsigned integer.\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readUint8 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 1 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+1) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getUint8(offset)\n\n    if (relative) {\n      this.offset += 1\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readUInt8 = this.readUint8\n\n  // types/ints/int16\n\n  /**\n\n     * Writes a 16bit signed integer.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  writeInt16 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) {\n        throw TypeError('Illegal value: ' + value + ' (not an integer)')\n      }\n\n      value |= 0\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 2\n\n    let capacity2 = this.buffer.byteLength\n\n    if (offset > capacity2) {\n      this.resize((capacity2 *= 2) > offset ? capacity2 : offset)\n    }\n\n    offset -= 2\n\n    this.view.setInt16(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 2\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\n\n     * @function\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  writeShort = this.writeInt16\n\n  /**\n\n     * Reads a 16bit signed integer.\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @returns {number} Value read\n\n     * @throws {TypeError} If `offset` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  readInt16 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (typeof offset === 'undefined') {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 2 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+2) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getInt16(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 2\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @returns {number} Value read\n\n     * @throws {TypeError} If `offset` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  readShort = this.readInt16\n\n  /**\n\n     * Writes a 16bit unsigned integer.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  writeUint16 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) {\n        throw TypeError('Illegal value: ' + value + ' (not an integer)')\n      }\n\n      value >>>= 0\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 2\n\n    let capacity3 = this.buffer.byteLength\n\n    if (offset > capacity3) {\n      this.resize((capacity3 *= 2) > offset ? capacity3 : offset)\n    }\n\n    offset -= 2\n\n    this.view.setUint16(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 2\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\n\n     * @function\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @throws {TypeError} If `offset` or `value` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  writeUInt16 = this.writeUint16\n\n  /**\n\n     * Reads a 16bit unsigned integer.\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @returns {number} Value read\n\n     * @throws {TypeError} If `offset` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  readUint16 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 2 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+2) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getUint16(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 2\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\n\n     * @returns {number} Value read\n\n     * @throws {TypeError} If `offset` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @expose\n\n     */\n\n  readUInt16 = this.readUint16\n\n  // types/ints/int32\n\n  /**\n\n     * Writes a 32bit signed integer.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @expose\n\n     */\n\n  writeInt32 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) {\n        throw TypeError('Illegal value: ' + value + ' (not an integer)')\n      }\n\n      value |= 0\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 4\n\n    let capacity4 = this.buffer.byteLength\n\n    if (offset > capacity4) {\n      this.resize((capacity4 *= 2) > offset ? capacity4 : offset)\n    }\n\n    offset -= 4\n\n    this.view.setInt32(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 4\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @expose\n\n     */\n\n  writeInt = this.writeInt32\n\n  /**\n\n     * Reads a 32bit signed integer.\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readInt32 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 4 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+4) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getInt32(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 4\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\n\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readInt = this.readInt32\n\n  /**\n\n     * Writes a 32bit unsigned integer.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @expose\n\n     */\n\n  writeUint32 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) {\n        throw TypeError('Illegal value: ' + value + ' (not an integer)')\n      }\n\n      value >>>= 0\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 4\n\n    let capacity5 = this.buffer.byteLength\n\n    if (offset > capacity5) {\n      this.resize((capacity5 *= 2) > offset ? capacity5 : offset)\n    }\n\n    offset -= 4\n\n    this.view.setUint32(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 4\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\n\n     * @function\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @expose\n\n     */\n\n  writeUInt32 = this.writeUint32\n\n  /**\n\n     * Reads a 32bit unsigned integer.\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readUint32 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 4 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+4) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getUint32(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 4\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {number} Value read\n\n     * @expose\n\n     */\n\n  readUInt32 = this.readUint32\n\n  /**\n\n     * Writes a 32bit float.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeFloat32 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number') {\n        throw TypeError('Illegal value: ' + value + ' (not a number)')\n      }\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 4\n\n    let capacity8 = this.buffer.byteLength\n\n    if (offset > capacity8) {\n      this.resize((capacity8 *= 2) > offset ? capacity8 : offset)\n    }\n\n    offset -= 4\n\n    this.view.setFloat32(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 4\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\n\n     * @function\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeFloat = this.writeFloat32\n\n  /**\n\n     * Reads a 32bit float.\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {number}\n\n     * @expose\n\n     */\n\n  readFloat32 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 4 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+4) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getFloat32(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 4\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\n\n     * @returns {number}\n\n     * @expose\n\n     */\n\n  readFloat = this.readFloat32\n\n  // types/floats/float64\n\n  /**\n\n     * Writes a 64bit float.\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeFloat64 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number') {\n        throw TypeError('Illegal value: ' + value + ' (not a number)')\n      }\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    offset += 8\n\n    let capacity9 = this.buffer.byteLength\n\n    if (offset > capacity9) {\n      this.resize((capacity9 *= 2) > offset ? capacity9 : offset)\n    }\n\n    offset -= 8\n\n    this.view.setFloat64(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 8\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\n\n     * @function\n\n     * @param {number} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeDouble = this.writeFloat64\n\n  /**\n\n     * Reads a 64bit float.\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {number}\n\n     * @expose\n\n     */\n\n  readFloat64 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 8 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+8) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getFloat64(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 8\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {number}\n\n     * @expose\n\n     */\n\n  readDouble = this.readFloat64\n\n  /**\n\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\n\n     *  data's length.\n\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array} source Data to append. If `source` is a ByteBuffer, its offsets\n\n     *  will be modified according to the performed read operation.\n\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\n\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n\n     *  written if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\n\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\n\n     */\n\n  append (source, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (!(source instanceof ByteBuffer)) {\n      source = ByteBuffer.wrap(source)\n    }\n\n    const length = source.limit - source.offset\n\n    if (length <= 0) {\n      return this\n    }\n\n    offset += length\n\n    let capacity16 = this.buffer.byteLength\n\n    if (offset > capacity16) {\n      this.resize((capacity16 *= 2) > offset ? capacity16 : offset)\n    }\n\n    offset -= length\n\n    new Uint8Array(this.buffer, offset).set(new Uint8Array(source.buffer).subarray(source.offset, source.limit))\n\n    source.offset += length\n\n    if (relative) {\n      this.offset += length\n    }\n\n    return this\n  }\n\n  /**\n\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\n\n        specified offset up to the length of this ByteBuffer's data.\n\n     * @param {!ByteBuffer} target Target ByteBuffer\n\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n\n     *  read if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     * @see ByteBuffer#append\n\n     */\n\n  appendTo (target, offset) {\n    target.append(this, offset)\n\n    return this\n  }\n\n  /**\n\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\n\n     *  disable them if your code already makes sure that everything is valid.\n\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  assert (assert) {\n    this.noAssert = !assert\n\n    return this\n  }\n\n  /**\n\n     * Gets the capacity of this ByteBuffer's backing buffer.\n\n     * @returns {number} Capacity of the backing buffer\n\n     * @expose\n\n     */\n\n  capacity () {\n    return this.buffer.byteLength\n  }\n\n  /**\n\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\n\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  clear () {\n    this.offset = 0\n\n    this.limit = this.buffer.byteLength\n\n    this.markedOffset = -1\n\n    return this\n  }\n\n  /**\n\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\n\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\n\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\n\n     * @returns {!ByteBuffer} Cloned instance\n\n     * @expose\n\n     */\n\n  clone (copy) {\n    const bb = new ByteBuffer(0, this.littleEndian, this.noAssert)\n\n    if (copy) {\n      bb.buffer = new ArrayBuffer(this.buffer.byteLength)\n\n      new Uint8Array(bb.buffer).set(this.buffer)\n\n      bb.view = new DataView(bb.buffer)\n    } else {\n      bb.buffer = this.buffer\n\n      bb.view = this.view\n    }\n\n    bb.offset = this.offset\n\n    bb.markedOffset = this.markedOffset\n\n    bb.limit = this.limit\n\n    return bb\n  }\n\n  /**\n\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\n\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\n\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\n\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\n\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  compact (begin, end) {\n    if (typeof begin === 'undefined') {\n      begin = this.offset\n    }\n\n    if (typeof end === 'undefined') {\n      end = this.limit\n    }\n\n    if (!this.noAssert) {\n      if (typeof begin !== 'number' || begin % 1 !== 0) {\n        throw TypeError('Illegal begin: Not an integer')\n      }\n\n      begin >>>= 0\n\n      if (typeof end !== 'number' || end % 1 !== 0) {\n        throw TypeError('Illegal end: Not an integer')\n      }\n\n      end >>>= 0\n\n      if (begin < 0 || begin > end || end > this.buffer.byteLength) {\n        throw RangeError('Illegal range: 0 <= ' + begin + ' <= ' + end + ' <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (begin === 0 && end === this.buffer.byteLength) {\n      return this\n    }\n\n    const len = end - begin\n\n    if (len === 0) {\n      this.buffer = EMPTY_BUFFER\n\n      this.view = new DataView(EMPTY_BUFFER)\n\n      if (this.markedOffset >= 0) {\n        this.markedOffset -= begin\n      }\n\n      this.offset = 0\n\n      this.limit = 0\n\n      return this\n    }\n\n    const buffer = new ArrayBuffer(len)\n\n    new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(begin, end))\n\n    this.buffer = buffer\n\n    this.view = new DataView(buffer)\n\n    if (this.markedOffset >= 0) {\n      this.markedOffset -= begin\n    }\n\n    this.offset = 0\n\n    this.limit = len\n\n    return this\n  }\n\n  /**\n\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\n\n     *  {@link ByteBuffer#limit}.\n\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\n\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\n\n     * @returns {!ByteBuffer} Copy\n\n     * @expose\n\n     */\n\n  copy (begin, end) {\n    if (typeof begin === 'undefined') {\n      begin = this.offset\n    }\n\n    if (typeof end === 'undefined') {\n      end = this.limit\n    }\n\n    if (!this.noAssert) {\n      if (typeof begin !== 'number' || begin % 1 !== 0) {\n        throw TypeError('Illegal begin: Not an integer')\n      }\n\n      begin >>>= 0\n\n      if (typeof end !== 'number' || end % 1 !== 0) {\n        throw TypeError('Illegal end: Not an integer')\n      }\n\n      end >>>= 0\n\n      if (begin < 0 || begin > end || end > this.buffer.byteLength) {\n        throw RangeError('Illegal range: 0 <= ' + begin + ' <= ' + end + ' <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (begin === end) {\n      return new ByteBuffer(0, this.littleEndian, this.noAssert)\n    }\n\n    const capacity = end - begin\n\n    const bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert)\n\n    bb.offset = 0\n\n    bb.limit = capacity\n\n    if (bb.markedOffset >= 0) {\n      bb.markedOffset -= begin\n    }\n\n    this.copyTo(bb, 0, begin, end)\n\n    return bb\n  }\n\n  /**\n\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\n\n     *  {@link ByteBuffer#limit}.\n\n     * @param {!ByteBuffer} target Target ByteBuffer\n\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\n\n     *  by the number of bytes copied if omitted.\n\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\n\n     *  number of bytes copied if omitted.\n\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  copyTo (target, targetOffset, sourceOffset, sourceLimit) {\n    const targetRelative = typeof targetOffset === 'undefined'\n    const relative = typeof sourceOffset === 'undefined'\n\n    if (!this.noAssert) {\n      if (!(target instanceof ByteBuffer)) {\n        throw TypeError('Illegal target: Not a ByteBuffer')\n      }\n    }\n\n    targetOffset = (targetRelative) ? target.offset : targetOffset | 0\n\n    sourceOffset = (relative) ? this.offset : sourceOffset | 0\n\n    sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0\n\n    if (targetOffset < 0 || targetOffset > target.buffer.byteLength) {\n      throw RangeError('Illegal target range: 0 <= ' + targetOffset + ' <= ' + target.buffer.byteLength)\n    }\n\n    if (sourceOffset < 0 || sourceLimit > this.buffer.byteLength) {\n      throw RangeError('Illegal source range: 0 <= ' + sourceOffset + ' <= ' + this.buffer.byteLength)\n    }\n\n    const len = sourceLimit - sourceOffset\n\n    if (len === 0) {\n      return target\n    }\n\n    target.ensureCapacity(targetOffset + len)\n\n    new Uint8Array(target.buffer).set(new Uint8Array(this.buffer).subarray(sourceOffset, sourceLimit), targetOffset)\n\n    if (relative) {\n      this.offset += len\n    }\n\n    if (targetRelative) {\n      target.offset += len\n    }\n\n    return this\n  }\n\n  /**\n\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\n\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\n\n     *  the required capacity will be used instead.\n\n     * @param {number} capacity Required capacity\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  ensureCapacity (capacity) {\n    let current = this.buffer.byteLength\n\n    if (current < capacity) {\n      return this.resize((current *= 2) > capacity ? current : capacity)\n    }\n\n    return this\n  }\n\n  /**\n\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\n\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\n\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\n\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\n\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\n\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\n\n     */\n\n  fill (value, begin, end) {\n    const relative = typeof begin === 'undefined'\n\n    if (relative) {\n      begin = this.offset\n    }\n\n    if (typeof value === 'string' && value.length > 0) {\n      value = value.charCodeAt(0)\n    }\n\n    if (typeof begin === 'undefined') {\n      begin = this.offset\n    }\n\n    if (typeof end === 'undefined') {\n      end = this.limit\n    }\n\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) {\n        throw TypeError('Illegal value: ' + value + ' (not an integer)')\n      }\n\n      value |= 0\n\n      if (typeof begin !== 'number' || begin % 1 !== 0) {\n        throw TypeError('Illegal begin: Not an integer')\n      }\n\n      begin >>>= 0\n\n      if (typeof end !== 'number' || end % 1 !== 0) {\n        throw TypeError('Illegal end: Not an integer')\n      }\n\n      end >>>= 0\n\n      if (begin < 0 || begin > end || end > this.buffer.byteLength) {\n        throw RangeError('Illegal range: 0 <= ' + begin + ' <= ' + end + ' <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (begin >= end) {\n      return this\n    }\n\n    while (begin < end) {\n      this.view.setUint8(begin++, value)\n    }\n\n    if (relative) {\n      this.offset = begin\n    }\n\n    return this\n  }\n\n  /**\n\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\n\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  flip () {\n    this.limit = this.offset\n\n    this.offset = 0\n\n    return this\n  }\n\n  /**\n\n     * Marks an offset on this ByteBuffer to be used later.\n\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\n\n     * @returns {!ByteBuffer} this\n\n     * @throws {TypeError} If `offset` is not a valid number\n\n     * @throws {RangeError} If `offset` is out of bounds\n\n     * @see ByteBuffer#reset\n\n     * @expose\n\n     */\n\n  mark (offset) {\n    offset = typeof offset === 'undefined' ? this.offset : offset\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    this.markedOffset = offset\n\n    return this\n  }\n\n  /**\n\n     * Sets the byte order.\n\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  order (littleEndian) {\n    if (!this.noAssert) {\n      if (typeof littleEndian !== 'boolean') {\n        throw TypeError('Illegal littleEndian: Not a boolean')\n      }\n    }\n\n    this.littleEndian = !!littleEndian\n\n    return this\n  }\n\n  /**\n\n     * Switches (to) little endian byte order.\n\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  LE (littleEndian) {\n    this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true\n\n    return this\n  }\n\n  /**\n\n     * Switches (to) big endian byte order.\n\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  BE (bigEndian) {\n    this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false\n\n    return this\n  }\n\n  /**\n\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\n\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\n\n     *  will be resized and its contents moved accordingly.\n\n     * @param {!ByteBuffer|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be\n\n     *  modified according to the performed read operation.\n\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\n\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\n\n     *  prepended if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\n\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\n\n     */\n\n  prepend (source, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (!(source instanceof ByteBuffer)) {\n      source = ByteBuffer.wrap(source)\n    }\n\n    const len = source.limit - source.offset\n\n    if (len <= 0) {\n      return this\n    }\n\n    const diff = len - offset\n\n    if (diff > 0) {\n      const buffer = new ArrayBuffer(this.buffer.byteLength + diff)\n\n      const arrayView = new Uint8Array(buffer)\n\n      arrayView.set(new Uint8Array(this.buffer).subarray(offset, this.buffer.byteLength), len)\n\n      this.buffer = buffer\n\n      this.view = new DataView(buffer)\n\n      this.offset += diff\n\n      if (this.markedOffset >= 0) {\n        this.markedOffset += diff\n      }\n\n      this.limit += diff\n\n      offset += diff\n    } else {\n      const arrayView = new Uint8Array(this.buffer)\n\n      arrayView.set(new Uint8Array(source.buffer).subarray(source.offset, source.limit), offset - len)\n    }\n\n    source.offset = source.limit\n\n    if (relative) {\n      this.offset -= len\n    }\n\n    return this\n  }\n\n  /**\n\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\n\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\n\n     *  will be resized and its contents moved accordingly.\n\n     * @param {!ByteBuffer} target Target ByteBuffer\n\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\n\n     *  prepended if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     * @see ByteBuffer#prepend\n\n     */\n\n  prependTo (target, offset) {\n    target.prepend(this, offset)\n\n    return this\n  }\n\n  /**\n\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\n\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\n\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\n\n     * @expose\n\n     */\n\n  remaining () {\n    return this.limit - this.offset\n  }\n\n  /**\n\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\n\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\n\n     *  marked, sets `offset = 0`.\n\n     * @returns {!ByteBuffer} this\n\n     * @see ByteBuffer#mark\n\n     * @expose\n\n     */\n\n  reset () {\n    if (this.markedOffset >= 0) {\n      this.offset = this.markedOffset\n\n      this.markedOffset = -1\n    } else {\n      this.offset = 0\n    }\n\n    return this\n  }\n\n  /**\n\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\n\n     *  large or larger.\n\n     * @param {number} capacity Capacity required\n\n     * @returns {!ByteBuffer} this\n\n     * @throws {TypeError} If `capacity` is not a number\n\n     * @throws {RangeError} If `capacity < 0`\n\n     * @expose\n\n     */\n\n  resize (capacity) {\n    if (!this.noAssert) {\n      if (typeof capacity !== 'number' || capacity % 1 !== 0) {\n        throw TypeError('Illegal capacity: ' + capacity + ' (not an integer)')\n      }\n\n      capacity |= 0\n\n      if (capacity < 0) {\n        throw RangeError('Illegal capacity: 0 <= ' + capacity)\n      }\n    }\n\n    if (this.buffer.byteLength < capacity) {\n      const buffer = new ArrayBuffer(capacity)\n\n      new Uint8Array(buffer).set(new Uint8Array(this.buffer))\n\n      this.buffer = buffer\n\n      this.view = new DataView(buffer)\n    }\n\n    return this\n  }\n\n  /**\n\n     * Reverses this ByteBuffer's contents.\n\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\n\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  reverse (begin, end) {\n    if (typeof begin === 'undefined') {\n      begin = this.offset\n    }\n\n    if (typeof end === 'undefined') {\n      end = this.limit\n    }\n\n    if (!this.noAssert) {\n      if (typeof begin !== 'number' || begin % 1 !== 0) {\n        throw TypeError('Illegal begin: Not an integer')\n      }\n\n      begin >>>= 0\n\n      if (typeof end !== 'number' || end % 1 !== 0) {\n        throw TypeError('Illegal end: Not an integer')\n      }\n\n      end >>>= 0\n\n      if (begin < 0 || begin > end || end > this.buffer.byteLength) {\n        throw RangeError('Illegal range: 0 <= ' + begin + ' <= ' + end + ' <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (begin === end) {\n      return this\n    }\n\n    Array.prototype.reverse.call(new Uint8Array(this.buffer).subarray(begin, end))\n\n    this.view = new DataView(this.buffer)\n\n    return this\n  }\n\n  /**\n\n     * Skips the next `length` bytes. This will just advance\n\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  skip (length) {\n    if (!this.noAssert) {\n      if (typeof length !== 'number' || length % 1 !== 0) {\n        throw TypeError('Illegal length: ' + length + ' (not an integer)')\n      }\n\n      length |= 0\n    }\n\n    const offset = this.offset + length\n\n    if (!this.noAssert) {\n      if (offset < 0 || offset > this.buffer.byteLength) {\n        throw RangeError('Illegal length: 0 <= ' + this.offset + ' + ' + length + ' <= ' + this.buffer.byteLength)\n      }\n    }\n\n    this.offset = offset\n\n    return this\n  }\n\n  /**\n\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\n\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\n\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\n\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\n\n     * @expose\n\n     */\n\n  slice (begin, end) {\n    if (typeof begin === 'undefined') {\n      begin = this.offset\n    }\n\n    if (typeof end === 'undefined') {\n      end = this.limit\n    }\n\n    if (!this.noAssert) {\n      if (typeof begin !== 'number' || begin % 1 !== 0) {\n        throw TypeError('Illegal begin: Not an integer')\n      }\n\n      begin >>>= 0\n\n      if (typeof end !== 'number' || end % 1 !== 0) {\n        throw TypeError('Illegal end: Not an integer')\n      }\n\n      end >>>= 0\n\n      if (begin < 0 || begin > end || end > this.buffer.byteLength) {\n        throw RangeError('Illegal range: 0 <= ' + begin + ' <= ' + end + ' <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const bb = this.clone()\n\n    bb.offset = begin\n\n    bb.limit = end\n\n    return bb\n  }\n\n  /**\n\n     * Writes a 64bit signed integer.\n\n     * @param {number|bigint} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeInt64 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (typeof offset === 'undefined') {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value === 'number') {\n        value = BigInt(value)\n      }\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (typeof value === 'number') {\n      value = BigInt(value)\n    }\n\n    offset += 8\n\n    let capacity6 = this.buffer.byteLength\n\n    if (offset > capacity6) {\n      this.resize((capacity6 *= 2) > offset ? capacity6 : offset)\n    }\n\n    offset -= 8\n\n    this.view.setBigInt64(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 8\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\n\n     * @param {number|!bigint} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeLong = this.writeInt64\n\n  /**\n\n     * Reads a 64bit signed integer.\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!bigint}\n\n     * @expose\n\n     */\n\n  readInt64 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 8 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+8) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getBigInt64(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 8\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!bigint}\n\n     * @expose\n\n     */\n\n  readLong = this.readInt64\n\n  /**\n\n     * Writes a 64bit unsigned integer.\n\n     * @param {number|!bigint} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeUint64 (value, offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (typeof offset === 'undefined') {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof value === 'number') {\n        value = BigInt(value)\n      }\n\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+0) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (typeof value === 'number') {\n      value = BigInt(value)\n    }\n\n    offset += 8\n\n    let capacity7 = this.buffer.byteLength\n\n    if (offset > capacity7) {\n      this.resize((capacity7 *= 2) > offset ? capacity7 : offset)\n    }\n\n    offset -= 8\n\n    this.view.setBigUint64(offset, value, this.littleEndian)\n\n    if (relative) {\n      this.offset += 8\n    }\n\n    return this\n  }\n\n  /**\n\n     * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\n\n     * @function\n\n     * @param {number|!bigint} value Value to write\n\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!ByteBuffer} this\n\n     * @expose\n\n     */\n\n  writeUInt64 = this.writeUint64\n\n  /**\n\n     * Reads a 64bit unsigned integer.\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!bigint}\n\n     * @expose\n\n     */\n\n  readUint64 (offset) {\n    const relative = typeof offset === 'undefined'\n\n    if (relative) {\n      offset = this.offset\n    }\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: ' + offset + ' (not an integer)')\n      }\n\n      offset >>>= 0\n\n      if (offset < 0 || offset + 8 > this.buffer.byteLength) {\n        throw RangeError('Illegal offset: 0 <= ' + offset + ' (+8) <= ' + this.buffer.byteLength)\n      }\n    }\n\n    const value = this.view.getBigUint64(offset, this.littleEndian)\n\n    if (relative) {\n      this.offset += 8\n    }\n\n    return value\n  }\n\n  /**\n\n     * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\n\n     * @function\n\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\n\n     * @returns {!Long}\n\n     * @expose\n\n     */\n\n  readUInt64 = this.readUint64\n\n  /**\n\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\n\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\n\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\n\n     *  possible. Defaults to `false`\n\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\n\n     * @expose\n\n     */\n\n  toBuffer (forceCopy) {\n    let offset = this.offset\n\n    let limit = this.limit\n\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) {\n        throw TypeError('Illegal offset: Not an integer')\n      }\n\n      offset >>>= 0\n\n      if (typeof limit !== 'number' || limit % 1 !== 0) {\n        throw TypeError('Illegal limit: Not an integer')\n      }\n\n      limit >>>= 0\n\n      if (offset < 0 || offset > limit || limit > this.buffer.byteLength) {\n        throw RangeError('Illegal range: 0 <= ' + offset + ' <= ' + limit + ' <= ' + this.buffer.byteLength)\n      }\n    }\n\n    if (!forceCopy) {\n      if (offset === 0 && limit === this.buffer.byteLength) {\n        return this.buffer\n      }\n\n      return this.buffer.slice(offset, limit)\n    }\n\n    if (offset === limit) {\n      return EMPTY_BUFFER\n    }\n\n    const buffer = new ArrayBuffer(limit - offset)\n\n    new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset, limit), 0)\n\n    return buffer\n  }\n\n  /**\n\n     * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\n\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}.\n\n     * @function\n\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory.\n\n     *  Defaults to `false`\n\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\n\n     * @expose\n\n     */\n\n  toArrayBuffer = this.toBuffer\n\n  writeVarint32 (value, offset) {\n    const relative = typeof offset === 'undefined'\n    if (relative) offset = this.offset\n    if (!this.noAssert) {\n      if (typeof value !== 'number' || value % 1 !== 0) { throw TypeError('Illegal value: ' + value + ' (not an integer)') }\n      value |= 0\n      if (typeof offset !== 'number' || offset % 1 !== 0) { throw TypeError('Illegal offset: ' + offset + ' (not an integer)') }\n      offset >>>= 0\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) { throw RangeError('Illegal offset: 0 <= ' + offset + ' (+' + 0 + ') <= ' + this.buffer.byteLength) }\n    }\n    const size = this.calculateVarint32(value)\n    let b\n    offset += size\n    let capacity10 = this.buffer.byteLength\n    if (offset > capacity10) { this.resize((capacity10 *= 2) > offset ? capacity10 : offset) }\n    offset -= size\n    value >>>= 0\n    while (value >= 0x80) {\n      b = (value & 0x7f) | 0x80\n      this.view.setUint8(offset++, b)\n      value >>>= 7\n    }\n    this.view.setUint8(offset++, value)\n    if (relative) {\n      this.offset = offset\n      return this\n    }\n    return size\n  }\n\n  readVarint32 = function (offset) {\n    const relative = typeof offset === 'undefined'\n    if (relative) offset = this.offset\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) { throw TypeError('Illegal offset: ' + offset + ' (not an integer)') }\n      offset >>>= 0\n      if (offset < 0 || offset + 1 > this.buffer.byteLength) { throw RangeError('Illegal offset: 0 <= ' + offset + ' (+' + 1 + ') <= ' + this.buffer.byteLength) }\n    }\n    let c = 0\n    let value = 0 >>> 0\n    let b\n    do {\n      if (!this.noAssert && offset > this.limit) {\n        const err = Error('Truncated')\n        err.truncated = true\n        throw err\n      }\n      b = this.view.getUint8(offset++)\n      if (c < 5) { value |= (b & 0x7f) << (7 * c) }\n      ++c\n    } while ((b & 0x80) !== 0)\n    value |= 0\n    if (relative) {\n      this.offset = offset\n      return value\n    }\n    return {\n      value,\n      length: c\n    }\n  }\n\n  calculateVarint32 (value) {\n    // ref: src/google/protobuf/io/coded_stream.cc\n    value = value >>> 0\n    if (value < 1 << 7) return 1\n    else if (value < 1 << 14) return 2\n    else if (value < 1 << 21) return 3\n    else if (value < 1 << 28) return 4\n    else return 5\n  }\n\n  writeVString (str, offset) {\n    const relative = typeof offset === 'undefined'\n    if (relative) offset = this.offset\n    if (!this.noAssert) {\n      if (typeof str !== 'string') { throw TypeError('Illegal str: Not a string') }\n      if (typeof offset !== 'number' || offset % 1 !== 0) { throw TypeError('Illegal offset: ' + offset + ' (not an integer)') }\n      offset >>>= 0\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) { throw RangeError('Illegal offset: 0 <= ' + offset + ' (+' + 0 + ') <= ' + this.buffer.byteLength) }\n    }\n    const start = offset\n    const k = utfx.calculateUTF16asUTF8(stringSource(str), this.noAssert)[1]\n    const l = this.calculateVarint32(k)\n    offset += l + k\n    let capacity15 = this.buffer.byteLength\n    if (offset > capacity15) { this.resize((capacity15 *= 2) > offset ? capacity15 : offset) }\n    offset -= l + k\n    offset += this.writeVarint32(k, offset)\n    utfx.encodeUTF16toUTF8(stringSource(str), function (b) {\n      this.view.setUint8(offset++, b)\n    }.bind(this))\n    if (offset !== start + k + l) { throw RangeError('Illegal range: Truncated data, ' + offset + ' == ' + (offset + k + l)) }\n    if (relative) {\n      this.offset = offset\n      return this\n    }\n    return offset - start\n  }\n\n  readVString (offset) {\n    const relative = typeof offset === 'undefined'\n    if (relative) offset = this.offset\n    if (!this.noAssert) {\n      if (typeof offset !== 'number' || offset % 1 !== 0) { throw TypeError('Illegal offset: ' + offset + ' (not an integer)') }\n      offset >>>= 0\n      if (offset < 0 || offset + 1 > this.buffer.byteLength) { throw RangeError('Illegal offset: 0 <= ' + offset + ' (+' + 1 + ') <= ' + this.buffer.byteLength) }\n    }\n    const start = offset\n    const len = this.readVarint32(offset)\n    const str = this.readUTF8String(len.value, ByteBuffer.METRICS_BYTES, offset += len.length)\n    offset += str.length\n    if (relative) {\n      this.offset = offset\n      return str.string\n    } else {\n      return {\n        string: str.string,\n        length: offset - start\n      }\n    }\n  }\n\n  readUTF8String (length, metrics, offset) {\n    if (typeof metrics === 'number') {\n      offset = metrics\n      metrics = undefined\n    }\n    const relative = typeof offset === 'undefined'\n    if (relative) offset = this.offset\n    if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS\n    if (!this.noAssert) {\n      if (typeof length !== 'number' || length % 1 !== 0) { throw TypeError('Illegal length: ' + length + ' (not an integer)') }\n      length |= 0\n      if (typeof offset !== 'number' || offset % 1 !== 0) { throw TypeError('Illegal offset: ' + offset + ' (not an integer)') }\n      offset >>>= 0\n      if (offset < 0 || offset + 0 > this.buffer.byteLength) { throw RangeError('Illegal offset: 0 <= ' + offset + ' (+' + 0 + ') <= ' + this.buffer.byteLength) }\n    }\n    let i = 0\n    const start = offset\n    let sd\n    if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\n      sd = stringDestination()\n      utfx.decodeUTF8(function () {\n        return i < length && offset < this.limit ? this.view.getUint8(offset++) : null\n      }.bind(this), function (cp) {\n        ++i; utfx.UTF8toUTF16(cp, sd)\n      })\n      if (i !== length) { throw RangeError('Illegal range: Truncated data, ' + i + ' == ' + length) }\n      if (relative) {\n        this.offset = offset\n        return sd()\n      } else {\n        return {\n          string: sd(),\n          length: offset - start\n        }\n      }\n    } else if (metrics === ByteBuffer.METRICS_BYTES) {\n      if (!this.noAssert) {\n        if (typeof offset !== 'number' || offset % 1 !== 0) { throw TypeError('Illegal offset: ' + offset + ' (not an integer)') }\n        offset >>>= 0\n        if (offset < 0 || offset + length > this.buffer.byteLength) { throw RangeError('Illegal offset: 0 <= ' + offset + ' (+' + length + ') <= ' + this.buffer.byteLength) }\n      }\n      const k = offset + length\n      utfx.decodeUTF8toUTF16(function () {\n        return offset < k ? this.view.getUint8(offset++) : null\n      }.bind(this), sd = stringDestination(), this.noAssert)\n      if (offset !== k) { throw RangeError('Illegal range: Truncated data, ' + offset + ' == ' + k) }\n      if (relative) {\n        this.offset = offset\n        return sd()\n      } else {\n        return {\n          string: sd(),\n          length: offset - start\n        }\n      }\n    } else { throw TypeError('Unsupported metrics: ' + metrics) }\n  }\n}\nfunction stringDestination () {\n  const cs = []; const ps = []; return function () {\n    if (arguments.length === 0) { return ps.join('') + stringFromCharCode.apply(String, cs) }\n    if (cs.length + arguments.length > 1024) {\n      ps.push(stringFromCharCode.apply(String, cs))\n      cs.length = 0\n    }\n    Array.prototype.push.apply(cs, arguments)\n  }\n}\nconst stringFromCharCode = String.fromCharCode\n\nfunction stringSource (s) {\n  let i = 0; return function () {\n    return i < s.length ? s.charCodeAt(i++) : null\n  }\n}\n\nconst EMPTY_BUFFER = new ArrayBuffer(0)\n\n/**\n   * utfx namespace.\n   * @inner\n   * @type {!Object.<string,*>}\n   */\nconst utfx = {}\n\n/**\n   * Maximum valid code point.\n   * @type {number}\n   * @const\n   */\nutfx.MAX_CODEPOINT = 0x10FFFF\n\n/**\n   * Encodes UTF8 code points to UTF8 bytes.\n   * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\n   *  respectively `null` if there are no more code points left or a single numeric code point.\n   * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\n   */\nutfx.encodeUTF8 = function (src, dst) {\n  let cp = null\n  if (typeof src === 'number') {\n    cp = src\n    src = function () { return null }\n  }\n  while (cp !== null || (cp = src()) !== null) {\n    if (cp < 0x80) { dst(cp & 0x7F) } else if (cp < 0x800) {\n      dst(((cp >> 6) & 0x1F) | 0xC0)\n      dst((cp & 0x3F) | 0x80)\n    } else if (cp < 0x10000) {\n      dst(((cp >> 12) & 0x0F) | 0xE0)\n      dst(((cp >> 6) & 0x3F) | 0x80)\n      dst((cp & 0x3F) | 0x80)\n    } else {\n      dst(((cp >> 18) & 0x07) | 0xF0)\n      dst(((cp >> 12) & 0x3F) | 0x80)\n      dst(((cp >> 6) & 0x3F) | 0x80)\n      dst((cp & 0x3F) | 0x80)\n    }\n    cp = null\n  }\n}\n\n/**\n   * Decodes UTF8 bytes to UTF8 code points.\n   * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\n   *  are no more bytes left.\n   * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\n   * @throws {RangeError} If a starting byte is invalid in UTF8\n   * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\n   *  remaining bytes.\n   */\nutfx.decodeUTF8 = function (src, dst) {\n  let a; let b; let c; let d; const fail = function (b) {\n    b = b.slice(0, b.indexOf(null))\n    const err = Error(b.toString())\n    err.name = 'TruncatedError'\n    err.bytes = b\n    throw err\n  }\n  while ((a = src()) !== null) {\n    if ((a & 0x80) === 0) { dst(a) } else if ((a & 0xE0) === 0xC0) {\n      ((b = src()) === null) && fail([a, b])\n      dst(((a & 0x1F) << 6) | (b & 0x3F))\n    } else if ((a & 0xF0) === 0xE0) {\n      ((b = src()) === null || (c = src()) === null) && fail([a, b, c])\n      dst(((a & 0x0F) << 12) | ((b & 0x3F) << 6) | (c & 0x3F))\n    } else if ((a & 0xF8) === 0xF0) {\n      ((b = src()) === null || (c = src()) === null || (d = src()) === null) && fail([a, b, c, d])\n      dst(((a & 0x07) << 18) | ((b & 0x3F) << 12) | ((c & 0x3F) << 6) | (d & 0x3F))\n    } else throw RangeError('Illegal starting byte: ' + a)\n  }\n}\n\n/**\n   * Converts UTF16 characters to UTF8 code points.\n   * @param {!function():number|null} src Characters source as a function returning the next char code respectively\n   *  `null` if there are no more characters left.\n   * @param {!function(number)} dst Code points destination as a function successively called with each converted code\n   *  point.\n   */\nutfx.UTF16toUTF8 = function (src, dst) {\n  let c1; let c2 = null\n  while (true) {\n    if ((c1 = c2 !== null ? c2 : src()) === null) { break }\n    if (c1 >= 0xD800 && c1 <= 0xDFFF) {\n      if ((c2 = src()) !== null) {\n        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\n          dst((c1 - 0xD800) * 0x400 + c2 - 0xDC00 + 0x10000)\n          c2 = null; continue\n        }\n      }\n    }\n    dst(c1)\n  }\n  if (c2 !== null) dst(c2)\n}\n\n/**\n   * Converts UTF8 code points to UTF16 characters.\n   * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\n   *  respectively `null` if there are no more code points left or a single numeric code point.\n   * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\n   * @throws {RangeError} If a code point is out of range\n   */\nutfx.UTF8toUTF16 = function (src, dst) {\n  let cp = null\n  if (typeof src === 'number') {\n    cp = src\n    src = function () { return null }\n  }\n  while (cp !== null || (cp = src()) !== null) {\n    if (cp <= 0xFFFF) { dst(cp) } else {\n      cp -= 0x10000\n      dst((cp >> 10) + 0xD800)\n      dst((cp % 0x400) + 0xDC00)\n    }\n    cp = null\n  }\n}\n\n/**\n   * Converts and encodes UTF16 characters to UTF8 bytes.\n   * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\n   *  if there are no more characters left.\n   * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\n   */\nutfx.encodeUTF16toUTF8 = function (src, dst) {\n  utfx.UTF16toUTF8(src, function (cp) {\n    utfx.encodeUTF8(cp, dst)\n  })\n}\n\n/**\n   * Decodes and converts UTF8 bytes to UTF16 characters.\n   * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\n   *  are no more bytes left.\n   * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\n   * @throws {RangeError} If a starting byte is invalid in UTF8\n   * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\n   */\nutfx.decodeUTF8toUTF16 = function (src, dst) {\n  utfx.decodeUTF8(src, function (cp) {\n    utfx.UTF8toUTF16(cp, dst)\n  })\n}\n\n/**\n   * Calculates the byte length of an UTF8 code point.\n   * @param {number} cp UTF8 code point\n   * @returns {number} Byte length\n   */\nutfx.calculateCodePoint = function (cp) {\n  return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4\n}\n\n/**\n   * Calculates the number of UTF8 bytes required to store UTF8 code points.\n   * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\n   *  `null` if there are no more code points left.\n   * @returns {number} The number of UTF8 bytes required\n   */\nutfx.calculateUTF8 = function (src) {\n  let cp; let l = 0\n  while ((cp = src()) !== null) { l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4 }\n  return l\n}\n\n/**\n   * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\n   * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\n   *  `null` if there are no more characters left.\n   * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\n   */\nutfx.calculateUTF16asUTF8 = function (src) {\n  let n = 0; let l = 0\n  utfx.UTF16toUTF8(src, function (cp) {\n    ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4\n  })\n  return [n, l]\n}\n","export const config = {\r\n  node: [\r\n    'https://api.hive.blog',\r\n    'https://api.deathwing.me',\r\n    'https://rpc.mahdiyari.info',\r\n    'https://techcoderx.com',\r\n    'https://hiveapi.actifit.io',\r\n    'https://hive-api.dlux.io',\r\n    'https://hive-api.arcange.eu',\r\n    'https://api.c0ff33a.uk'\r\n  ],\r\n  chain_id: 'beeab0de00000000000000000000000000000000000000000000000000000000',\r\n  address_prefix: 'STM',\r\n  axiosAdapter: null,\r\n  timeout: 5, // 5 seconds\r\n  retry: 5, // consecutive retries on one call\r\n  healthcheckInterval: 30_000\r\n}\r\n","/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/** SHA2-256 hash function */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n */\nimport { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\n/** SHA2-512 hash function. */\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\n/** SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\n/** SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\n/** SHA2-384 hash function. */\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/**\n * RIPEMD-160 legacy hash function.\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n * @module\n */\nimport { HashMD } from './_md.js';\nimport { rotl, wrapConstructor } from './utils.js';\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst R_BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            R_BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        R_BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/** RIPEMD-160 - a legacy hash function from 1990s. */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","import { sha256 as sh256 } from '@noble/hashes/sha256'\r\nimport { sha512 as sh512 } from '@noble/hashes/sha512'\r\nimport { ripemd160 as rp160 } from '@noble/hashes/ripemd160'\r\n\r\nexport const sha256 = (input) => {\r\n  return sh256(input)\r\n  // return Uint8Array.from(sh256(input))\r\n}\r\n\r\nexport const sha512 = (input) => {\r\n  return sh512(input)\r\n  // return Uint8Array.from(sh512(input))\r\n}\r\n\r\nexport const ripemd160 = (input) => {\r\n  return rp160(input)\r\n  // return Uint8Array.from(rp160(input))\r\n}\r\n","import basex from 'base-x';\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nexport default basex(ALPHABET);\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  const BASE_MAP = new Uint8Array(256)\n  for (let j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    // eslint-disable-next-line no-empty\n    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n    // Skip leading zeroes in base58 result.\n    let it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    let psz = 0\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      let carry = BASE_MAP[source.charCodeAt(psz)]\n      // Invalid character\n      if (carry === 255) { return }\n      let i = 0\n      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n    // Skip leading zeroes in b256.\n    let it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    const vch = new Uint8Array(zeroes + (size - it4))\n    let j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode,\n    decodeUnsafe,\n    decode\n  }\n}\nexport default base\n","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (modulo <= _0n)\n        throw new Error('invalid modulus');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n        // Crash instead of infinity loop, we cannot reasonable count until P.\n        if (Z > 1000)\n            throw new Error('Cannot find square root: likely non-prime P');\n    }\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(order) {\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { nLength, validateField } from './modular.js';\nimport { bitLen, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, bits) {\n    validateW(W, bits);\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF(c, bits) {\n    return {\n        constTimeNegate,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = calcWOpts(W, bits);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                if (n === _0n)\n                    break; // No need to go over empty scalar\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                if (wbits === 0)\n                    continue;\n                let curr = precomputes[offset + Math.abs(wbits) - 1]; // -1 because we skip zero\n                if (wbits < 0)\n                    curr = curr.negate();\n                // NOTE: by re-using acc, we can save a lot of additions in case of MSM\n                acc = acc.add(curr);\n            }\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    if (points.length !== scalars.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = BigInt((1 << windowSize) - 1);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { pippenger, validateBasic, wNAF, } from './curve.js';\nimport { Field, getMinHashLength, invert, mapHashToField, mod, validateField, } from './modular.js';\nimport * as ut from './utils.js';\nimport { abool, ensureBytes, memoized } from './utils.js';\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('invalid endomorphism, can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('invalid endomorphism, expected beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = ut.numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? ut.numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = ut.numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = ut.numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return b2n(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const Fn = Field(CURVE.n, CURVE.nBitLength);\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return ut.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('invalid private key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error('invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key);\n        }\n        if (wrapPrivateKey)\n            num = mod(num, N); // disabled by default, enabled for BLS\n        ut.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', sc, _0n, N);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (this.is0() || sc === _1n)\n                return this;\n            // Case a: no endomorphism. Case b: has precomputes.\n            if (!endo || wnaf.hasPrecomputes(this))\n                return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n            // Case c: endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            abool('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!ut.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                const cl = compressedLen;\n                const ul = uncompressedLen;\n                throw new Error('invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            ut.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            ut.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = getMinHashLength(CURVE.n);\n            return mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // Our custom check \"just in case\"\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        ut.aInRange('num < 2^' + CURVE.nBitLength, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n    // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        const { lowS, prehash, format } = opts;\n        // Verify opts, deduce signature format\n        validateSigVerOpts(opts);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        if (format !== undefined && format !== 'compact' && format !== 'der')\n            throw new Error('format must be compact or der');\n        const isHex = typeof sg === 'string' || ut.isBytes(sg);\n        const isObj = !isHex &&\n            !format &&\n            typeof sg === 'object' &&\n            sg !== null &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        let _sig = undefined;\n        let P;\n        try {\n            if (isObj)\n                _sig = new Signature(sg.r, sg.s);\n            if (isHex) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    if (format !== 'compact')\n                        _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                }\n                if (!_sig && format !== 'der')\n                    _sig = Signature.fromCompact(sg);\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        if (!_sig)\n            return false;\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","/**\n * NIST secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Seems to be rigid (not backdoored)\n * [as per discussion](https://bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975).\n *\n * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n * [See explanation](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { aInRange, bytesToNumberBE, concatBytes, ensureBytes, inRange, numberToBytesBE, } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 short weierstrass curve and ECDSA signatures over it.\n *\n * @example\n * import { secp256k1 } from '@noble/curves/secp256k1';\n *\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n */\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7),\n    Fp: Fpk1, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n        // Endomorphism, see above\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    aInRange('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1P))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1N))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n */\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\n/** secp256k1 hash-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\n/** secp256k1 encode-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","// const crypto = require('crypto')\r\n\r\nimport { ripemd160 } from './crypto.js'\r\nimport bs58 from 'bs58'\r\nimport { config } from '../config.js'\r\nimport { secp256k1 } from '@noble/curves/secp256k1'\r\n\r\nconst DEFAULT_ADDRESS_PREFIX = config.address_prefix\r\n\r\n/** ECDSA (secp256k1) public key. */\r\nexport class PublicKey {\r\n  constructor (key, prefix = DEFAULT_ADDRESS_PREFIX) {\r\n    this.key = key\r\n    this.prefix = prefix\r\n    // assert(secp256k1.publicKeyVerify(key), 'invalid public key')\r\n  }\r\n\r\n  /** Create a new instance from a WIF-encoded key. */\r\n  static fromString (wif) {\r\n    const { key, prefix } = decodePublic(wif)\r\n    return new PublicKey(key, prefix)\r\n  }\r\n\r\n  /** Create a new instance. */\r\n  static from (value) {\r\n    if (value instanceof PublicKey) {\r\n      return value\r\n    } else {\r\n      return PublicKey.fromString(value)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verify a 32-byte signature.\r\n   * @param message 32-byte message to verify.\r\n   * @param signature Signature to verify.\r\n   */\r\n  verify (message, signature) {\r\n    return secp256k1.verify(signature.data, message, this.key)\r\n  }\r\n\r\n  /** Return a WIF-encoded representation of the key. */\r\n  toString () {\r\n    return encodePublic(this.key, this.prefix)\r\n  }\r\n\r\n  /** Return JSON representation of this key, same as toString(). */\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  /** Used by `utils.inspect` and `console.log` in node.js. */\r\n  inspect () {\r\n    return `PublicKey: ${this.toString()}`\r\n  }\r\n}\r\n\r\nconst encodePublic = (key, prefix) => {\r\n  const checksum = ripemd160(key)\r\n  return prefix + bs58.encode(new Uint8Array([...key, ...checksum.subarray(0, 4)]))\r\n}\r\n\r\n/** Decode bs58+ripemd160-checksum encoded public key. */\r\nconst decodePublic = encodedKey => {\r\n  const prefix = encodedKey.slice(0, 3)\r\n  encodedKey = encodedKey.slice(3)\r\n  const buffer = bs58.decode(encodedKey)\r\n  const key = buffer.subarray(0, buffer.length - 4)\r\n  return { key, prefix }\r\n}\r\n","/** Class representing a hive asset,\r\n * e.g. `1.000 HIVE` or `12.112233 VESTS`. */\r\nexport class Asset {\r\n  /** Create a new Asset instance from a string, e.g. `42.000 HIVE`. */\r\n  static fromString (string, expectedSymbol = null) {\r\n    const [amountString, symbol] = string.split(' ')\r\n    if (\r\n      ['STEEM', 'VESTS', 'SBD', 'TESTS', 'TBD', 'HIVE', 'HBD'].indexOf(\r\n        symbol\r\n      ) === -1\r\n    ) {\r\n      throw new Error(`Invalid asset symbol: ${symbol}`)\r\n    }\r\n    if (expectedSymbol && symbol !== expectedSymbol) {\r\n      throw new Error(\r\n        `Invalid asset, expected symbol: ${expectedSymbol} got: ${symbol}`\r\n      )\r\n    }\r\n    const amount = Number.parseFloat(amountString)\r\n    if (!Number.isFinite(amount)) {\r\n      throw new Error(`Invalid asset amount: ${amountString}`)\r\n    }\r\n    return new Asset(amount, symbol)\r\n  }\r\n\r\n  /**\r\n   * Convenience to create new Asset.\r\n   * @param symbol Symbol to use when created from number. Will also be used to validate\r\n   *               the asset, throws if the passed value has a different symbol than this.\r\n   */\r\n  static from (value, symbol = null) {\r\n    if (value instanceof Asset) {\r\n      if (symbol && value.symbol !== symbol) {\r\n        throw new Error(\r\n          `Invalid asset, expected symbol: ${symbol} got: ${value.symbol}`\r\n        )\r\n      }\r\n      return value\r\n    } else if (typeof value === 'number' && Number.isFinite(value)) {\r\n      return new Asset(value, symbol || 'STEEM')\r\n    } else if (typeof value === 'string') {\r\n      return Asset.fromString(value, symbol)\r\n    } else {\r\n      throw new Error(`Invalid asset '${String(value)}'`)\r\n    }\r\n  }\r\n\r\n  // We convert HIVE & HBD strings to STEEM & SBD because the serialization should be based on STEEM & SBD\r\n  constructor (amount, symbol) {\r\n    this.amount = amount\r\n    this.symbol =\r\n      symbol === 'HIVE' ? 'STEEM' : symbol === 'HBD' ? 'SBD' : symbol\r\n  }\r\n\r\n  /** Return asset precision. */\r\n  getPrecision () {\r\n    switch (this.symbol) {\r\n      case 'TESTS':\r\n      case 'TBD':\r\n      case 'STEEM':\r\n      case 'SBD':\r\n      case 'HBD':\r\n      case 'HIVE':\r\n        return 3\r\n      case 'VESTS':\r\n        return 6\r\n    }\r\n  }\r\n\r\n  /** Return a string representation of this asset, e.g. `42.000 HIVE`. */\r\n  toString () {\r\n    return `${this.amount.toFixed(this.getPrecision())} ${this.symbol}`\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n}\r\n","export const hexToUint8Array = (hexString) => {\n  const bytes = []\n  for (let i = 0; i < hexString.length; i += 2) {\n    bytes.push(parseInt(hexString.substr(i, 2), 16))\n  }\n  return new Uint8Array(bytes)\n}\nexport const uint8ArrayToHex = (uint8Array) => {\n  return Array.from(uint8Array)\n    .map(byte => byte.toString(16).padStart(2, '0'))\n    .join('')\n}\n","import { hexToUint8Array, uint8ArrayToHex } from './uint8Array.js'\r\n\r\n/** Buffer wrapper that serializes to a hex-encoded string. */\r\nexport class HexBuffer {\r\n  /** Convenience to create a new HexBuffer, does not copy data if value passed is already a buffer. */\r\n  static from (value) {\r\n    if (value instanceof HexBuffer) {\r\n      return value\r\n    } else if (value instanceof Uint8Array) {\r\n      return new HexBuffer(value)\r\n    } else if (typeof value === 'string') {\r\n      return new HexBuffer(hexToUint8Array(value))\r\n    } else {\r\n      return new HexBuffer(new Uint8Array(value))\r\n    }\r\n  }\r\n\r\n  constructor (buffer) {\r\n    this.buffer = buffer\r\n  }\r\n\r\n  toString (encoding = 'hex') {\r\n    return uint8ArrayToHex(this.buffer)\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n}\r\n","import { PublicKey } from './PublicKey.js'\r\nimport { Asset } from './Asset.js'\r\nimport { HexBuffer } from './HexBuffer.js'\r\n\r\nconst VoidSerializer = () => {\r\n  throw new Error('Void can not be serialized')\r\n}\r\nconst StringSerializer = (buffer, data) => {\r\n  buffer.writeVString(data)\r\n}\r\n\r\nconst Int8Serializer = (buffer, data) => {\r\n  buffer.writeInt8(data)\r\n}\r\n\r\nconst Int16Serializer = (buffer, data) => {\r\n  buffer.writeInt16(data)\r\n}\r\n\r\nconst Int32Serializer = (buffer, data) => {\r\n  buffer.writeInt32(data)\r\n}\r\n\r\nconst Int64Serializer = (buffer, data) => {\r\n  buffer.writeInt64(data)\r\n}\r\n\r\nconst UInt8Serializer = (buffer, data) => {\r\n  buffer.writeUint8(data)\r\n}\r\n\r\nconst UInt16Serializer = (buffer, data) => {\r\n  buffer.writeUint16(data)\r\n}\r\n\r\nconst UInt32Serializer = (buffer, data) => {\r\n  buffer.writeUint32(data)\r\n}\r\n\r\nconst UInt64Serializer = (buffer, data) => {\r\n  buffer.writeUint64(data)\r\n}\r\n\r\nconst BooleanSerializer = (buffer, data) => {\r\n  buffer.writeByte(data ? 1 : 0)\r\n}\r\n\r\nconst StaticVariantSerializer = (itemSerializers) => {\r\n  return (buffer, data) => {\r\n    let id = data[0]\r\n    const item = data[1]\r\n    // id was/is supposed to be 0 or integer here but seems to have been changed in e.g. comment_options\r\n    // extensions: [\r\n    //   [\r\n    //     \"comment_payout_beneficiaries\",\r\n    //     {\r\n    //       \"beneficiaries\": [\r\n    //         {\r\n    //           \"account\": \"vimm\",\r\n    //           \"weight\": 1000\r\n    //         }\r\n    //       ]\r\n    //     }\r\n    //   ]\r\n    // ]\r\n    // \"comment_payout_beneficiaries\" was 0 and at some point it got changed\r\n    // It should still be serialized as a 0 or an integer\r\n    // Now the question is, always 0? will need an example transaction to prove otherwise\r\n    if (typeof id === 'string') {\r\n      if (id === 'update_proposal_end_date') {\r\n        id = 1\r\n      } else {\r\n        id = 0\r\n      }\r\n    }\r\n    buffer.writeVarint32(id)\r\n    itemSerializers[id](buffer, item)\r\n  }\r\n}\r\n\r\n/**\r\n * Serialize asset.\r\n * @note This looses precision for amounts larger than 2^53-1/10^precision.\r\n *       Should not be a problem in real-word usage.\r\n */\r\nconst AssetSerializer = (buffer, data) => {\r\n  const asset = Asset.from(data)\r\n  const precision = asset.getPrecision()\r\n  buffer.writeInt64(Math.round(asset.amount * Math.pow(10, precision)))\r\n  buffer.writeUint8(precision)\r\n  for (let i = 0; i < 7; i++) {\r\n    buffer.writeUint8(asset.symbol.charCodeAt(i) || 0)\r\n  }\r\n}\r\n\r\nconst DateSerializer = (buffer, data) => {\r\n  buffer.writeUint32(Math.floor(new Date(data + 'Z').getTime() / 1000))\r\n}\r\n\r\nconst PublicKeySerializer = (buffer, data) => {\r\n  if (\r\n    data === null ||\r\n    (typeof data === 'string' &&\r\n      data.slice(-39) === '1111111111111111111111111111111114T1Anm')\r\n  ) {\r\n    buffer.append(new Uint8Array(33).fill(0))\r\n  } else {\r\n    buffer.append(PublicKey.from(data).key)\r\n  }\r\n}\r\n\r\nconst BinarySerializer = (size = null) => {\r\n  return (buffer, data) => {\r\n    data = HexBuffer.from(data)\r\n    const len = data.buffer.length\r\n    if (size) {\r\n      if (len !== size) {\r\n        throw new Error(\r\n          `Unable to serialize binary. Expected ${size} bytes, got ${len}`\r\n        )\r\n      }\r\n    } else {\r\n      buffer.writeVarint32(len)\r\n    }\r\n    buffer.append(data.buffer)\r\n  }\r\n}\r\n\r\nconst VariableBinarySerializer = BinarySerializer()\r\n\r\nconst FlatMapSerializer = (keySerializer, valueSerializer) => {\r\n  return (buffer, data) => {\r\n    buffer.writeVarint32(data.length)\r\n    for (const [key, value] of data) {\r\n      keySerializer(buffer, key)\r\n      valueSerializer(buffer, value)\r\n    }\r\n  }\r\n}\r\n\r\nconst ArraySerializer = (itemSerializer) => {\r\n  return (buffer, data) => {\r\n    buffer.writeVarint32(data.length)\r\n    for (const item of data) {\r\n      itemSerializer(buffer, item)\r\n    }\r\n  }\r\n}\r\n\r\nconst ObjectSerializer = (keySerializers) => {\r\n  return (buffer, data) => {\r\n    for (const [key, serializer] of keySerializers) {\r\n      try {\r\n        serializer(buffer, data[key])\r\n      } catch (error) {\r\n        error.message = `${key}: ${error.message}`\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst OptionalSerializer = (valueSerializer) => {\r\n  return (buffer, data) => {\r\n    if (data !== undefined) {\r\n      buffer.writeByte(1)\r\n      valueSerializer(buffer, data)\r\n    } else {\r\n      buffer.writeByte(0)\r\n    }\r\n  }\r\n}\r\n\r\nconst AuthoritySerializer = ObjectSerializer([\r\n  ['weight_threshold', UInt32Serializer],\r\n  ['account_auths', FlatMapSerializer(StringSerializer, UInt16Serializer)],\r\n  ['key_auths', FlatMapSerializer(PublicKeySerializer, UInt16Serializer)]\r\n])\r\n\r\nconst BeneficiarySerializer = ObjectSerializer([\r\n  ['account', StringSerializer],\r\n  ['weight', UInt16Serializer]\r\n])\r\n\r\nconst PriceSerializer = ObjectSerializer([\r\n  ['base', AssetSerializer],\r\n  ['quote', AssetSerializer]\r\n])\r\n\r\nconst SignedBlockHeaderSerializer = ObjectSerializer([\r\n  ['previous', BinarySerializer(20)],\r\n  ['timestamp', DateSerializer],\r\n  ['witness', StringSerializer],\r\n  ['transaction_merkle_root', BinarySerializer(20)],\r\n  ['extensions', ArraySerializer(VoidSerializer)],\r\n  ['witness_signature', BinarySerializer(65)]\r\n])\r\n\r\nconst ChainPropertiesSerializer = ObjectSerializer([\r\n  ['account_creation_fee', AssetSerializer],\r\n  ['maximum_block_size', UInt32Serializer],\r\n  ['hbd_interest_rate', UInt16Serializer]\r\n])\r\n\r\nconst OperationDataSerializer = (operationId, definitions) => {\r\n  const objectSerializer = ObjectSerializer(definitions)\r\n  return (buffer, data) => {\r\n    buffer.writeVarint32(operationId)\r\n    objectSerializer(buffer, data)\r\n  }\r\n}\r\n\r\nconst OperationSerializers = {}\r\n\r\nOperationSerializers.account_create = OperationDataSerializer(9, [\r\n  ['fee', AssetSerializer],\r\n  ['creator', StringSerializer],\r\n  ['new_account_name', StringSerializer],\r\n  ['owner', AuthoritySerializer],\r\n  ['active', AuthoritySerializer],\r\n  ['posting', AuthoritySerializer],\r\n  ['memo_key', PublicKeySerializer],\r\n  ['json_metadata', StringSerializer]\r\n])\r\n\r\nOperationSerializers.account_create_with_delegation = OperationDataSerializer(\r\n  41,\r\n  [\r\n    ['fee', AssetSerializer],\r\n    ['delegation', AssetSerializer],\r\n    ['creator', StringSerializer],\r\n    ['new_account_name', StringSerializer],\r\n    ['owner', AuthoritySerializer],\r\n    ['active', AuthoritySerializer],\r\n    ['posting', AuthoritySerializer],\r\n    ['memo_key', PublicKeySerializer],\r\n    ['json_metadata', StringSerializer],\r\n    ['extensions', ArraySerializer(VoidSerializer)]\r\n  ]\r\n)\r\n\r\nOperationSerializers.account_update = OperationDataSerializer(10, [\r\n  ['account', StringSerializer],\r\n  ['owner', OptionalSerializer(AuthoritySerializer)],\r\n  ['active', OptionalSerializer(AuthoritySerializer)],\r\n  ['posting', OptionalSerializer(AuthoritySerializer)],\r\n  ['memo_key', PublicKeySerializer],\r\n  ['json_metadata', StringSerializer]\r\n])\r\n\r\nOperationSerializers.account_witness_proxy = OperationDataSerializer(13, [\r\n  ['account', StringSerializer],\r\n  ['proxy', StringSerializer]\r\n])\r\n\r\nOperationSerializers.account_witness_vote = OperationDataSerializer(12, [\r\n  ['account', StringSerializer],\r\n  ['witness', StringSerializer],\r\n  ['approve', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.cancel_transfer_from_savings = OperationDataSerializer(\r\n  34,\r\n  [\r\n    ['from', StringSerializer],\r\n    ['request_id', UInt32Serializer]\r\n  ]\r\n)\r\n\r\nOperationSerializers.change_recovery_account = OperationDataSerializer(26, [\r\n  ['account_to_recover', StringSerializer],\r\n  ['new_recovery_account', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.claim_account = OperationDataSerializer(22, [\r\n  ['creator', StringSerializer],\r\n  ['fee', AssetSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.claim_reward_balance = OperationDataSerializer(39, [\r\n  ['account', StringSerializer],\r\n  ['reward_hive', AssetSerializer],\r\n  ['reward_hbd', AssetSerializer],\r\n  ['reward_vests', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.comment = OperationDataSerializer(1, [\r\n  ['parent_author', StringSerializer],\r\n  ['parent_permlink', StringSerializer],\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['title', StringSerializer],\r\n  ['body', StringSerializer],\r\n  ['json_metadata', StringSerializer]\r\n])\r\n\r\nOperationSerializers.comment_options = OperationDataSerializer(19, [\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['max_accepted_payout', AssetSerializer],\r\n  ['percent_hbd', UInt16Serializer],\r\n  ['allow_votes', BooleanSerializer],\r\n  ['allow_curation_rewards', BooleanSerializer],\r\n  [\r\n    'extensions',\r\n    ArraySerializer(\r\n      StaticVariantSerializer([\r\n        ObjectSerializer([\r\n          ['beneficiaries', ArraySerializer(BeneficiarySerializer)]\r\n        ])\r\n      ])\r\n    )\r\n  ]\r\n])\r\n\r\nOperationSerializers.convert = OperationDataSerializer(8, [\r\n  ['owner', StringSerializer],\r\n  ['requestid', UInt32Serializer],\r\n  ['amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.create_claimed_account = OperationDataSerializer(23, [\r\n  ['creator', StringSerializer],\r\n  ['new_account_name', StringSerializer],\r\n  ['owner', AuthoritySerializer],\r\n  ['active', AuthoritySerializer],\r\n  ['posting', AuthoritySerializer],\r\n  ['memo_key', PublicKeySerializer],\r\n  ['json_metadata', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.custom = OperationDataSerializer(15, [\r\n  ['required_auths', ArraySerializer(StringSerializer)],\r\n  ['id', UInt16Serializer],\r\n  ['data', VariableBinarySerializer]\r\n])\r\n\r\nOperationSerializers.custom_binary = OperationDataSerializer(35, [\r\n  ['required_owner_auths', ArraySerializer(StringSerializer)],\r\n  ['required_active_auths', ArraySerializer(StringSerializer)],\r\n  ['required_posting_auths', ArraySerializer(StringSerializer)],\r\n  ['required_auths', ArraySerializer(AuthoritySerializer)],\r\n  ['id', StringSerializer],\r\n  ['data', VariableBinarySerializer]\r\n])\r\n\r\nOperationSerializers.custom_json = OperationDataSerializer(18, [\r\n  ['required_auths', ArraySerializer(StringSerializer)],\r\n  ['required_posting_auths', ArraySerializer(StringSerializer)],\r\n  ['id', StringSerializer],\r\n  ['json', StringSerializer]\r\n])\r\n\r\nOperationSerializers.decline_voting_rights = OperationDataSerializer(36, [\r\n  ['account', StringSerializer],\r\n  ['decline', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.delegate_vesting_shares = OperationDataSerializer(40, [\r\n  ['delegator', StringSerializer],\r\n  ['delegatee', StringSerializer],\r\n  ['vesting_shares', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.delete_comment = OperationDataSerializer(17, [\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer]\r\n])\r\n\r\nOperationSerializers.escrow_approve = OperationDataSerializer(31, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['who', StringSerializer],\r\n  ['escrow_id', UInt32Serializer],\r\n  ['approve', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.escrow_dispute = OperationDataSerializer(28, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['who', StringSerializer],\r\n  ['escrow_id', UInt32Serializer]\r\n])\r\n\r\nOperationSerializers.escrow_release = OperationDataSerializer(29, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['who', StringSerializer],\r\n  ['receiver', StringSerializer],\r\n  ['escrow_id', UInt32Serializer],\r\n  ['hbd_amount', AssetSerializer],\r\n  ['hive_amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.escrow_transfer = OperationDataSerializer(27, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['agent', StringSerializer],\r\n  ['escrow_id', UInt32Serializer],\r\n  ['hbd_amount', AssetSerializer],\r\n  ['hive_amount', AssetSerializer],\r\n  ['fee', AssetSerializer],\r\n  ['ratification_deadline', DateSerializer],\r\n  ['escrow_expiration', DateSerializer],\r\n  ['json_meta', StringSerializer]\r\n])\r\n\r\nOperationSerializers.feed_publish = OperationDataSerializer(7, [\r\n  ['publisher', StringSerializer],\r\n  ['exchange_rate', PriceSerializer]\r\n])\r\n\r\nOperationSerializers.limit_order_cancel = OperationDataSerializer(6, [\r\n  ['owner', StringSerializer],\r\n  ['orderid', UInt32Serializer]\r\n])\r\n\r\nOperationSerializers.limit_order_create = OperationDataSerializer(5, [\r\n  ['owner', StringSerializer],\r\n  ['orderid', UInt32Serializer],\r\n  ['amount_to_sell', AssetSerializer],\r\n  ['min_to_receive', AssetSerializer],\r\n  ['fill_or_kill', BooleanSerializer],\r\n  ['expiration', DateSerializer]\r\n])\r\n\r\nOperationSerializers.limit_order_create2 = OperationDataSerializer(21, [\r\n  ['owner', StringSerializer],\r\n  ['orderid', UInt32Serializer],\r\n  ['amount_to_sell', AssetSerializer],\r\n  ['fill_or_kill', BooleanSerializer],\r\n  ['exchange_rate', PriceSerializer],\r\n  ['expiration', DateSerializer]\r\n])\r\n\r\nOperationSerializers.recover_account = OperationDataSerializer(25, [\r\n  ['account_to_recover', StringSerializer],\r\n  ['new_owner_authority', AuthoritySerializer],\r\n  ['recent_owner_authority', AuthoritySerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.report_over_production = OperationDataSerializer(16, [\r\n  ['reporter', StringSerializer],\r\n  ['first_block', SignedBlockHeaderSerializer],\r\n  ['second_block', SignedBlockHeaderSerializer]\r\n])\r\n\r\nOperationSerializers.request_account_recovery = OperationDataSerializer(24, [\r\n  ['recovery_account', StringSerializer],\r\n  ['account_to_recover', StringSerializer],\r\n  ['new_owner_authority', AuthoritySerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.reset_account = OperationDataSerializer(37, [\r\n  ['reset_account', StringSerializer],\r\n  ['account_to_reset', StringSerializer],\r\n  ['new_owner_authority', AuthoritySerializer]\r\n])\r\n\r\nOperationSerializers.set_reset_account = OperationDataSerializer(38, [\r\n  ['account', StringSerializer],\r\n  ['current_reset_account', StringSerializer],\r\n  ['reset_account', StringSerializer]\r\n])\r\n\r\nOperationSerializers.set_withdraw_vesting_route = OperationDataSerializer(20, [\r\n  ['from_account', StringSerializer],\r\n  ['to_account', StringSerializer],\r\n  ['percent', UInt16Serializer],\r\n  ['auto_vest', BooleanSerializer]\r\n])\r\n\r\nOperationSerializers.transfer = OperationDataSerializer(2, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer]\r\n])\r\n\r\nOperationSerializers.transfer_from_savings = OperationDataSerializer(33, [\r\n  ['from', StringSerializer],\r\n  ['request_id', UInt32Serializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer]\r\n])\r\n\r\nOperationSerializers.transfer_to_savings = OperationDataSerializer(32, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer]\r\n])\r\n\r\nOperationSerializers.transfer_to_vesting = OperationDataSerializer(3, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.vote = OperationDataSerializer(0, [\r\n  ['voter', StringSerializer],\r\n  ['author', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['weight', Int16Serializer]\r\n])\r\n\r\nOperationSerializers.withdraw_vesting = OperationDataSerializer(4, [\r\n  ['account', StringSerializer],\r\n  ['vesting_shares', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.witness_update = OperationDataSerializer(11, [\r\n  ['owner', StringSerializer],\r\n  ['url', StringSerializer],\r\n  ['block_signing_key', PublicKeySerializer],\r\n  ['props', ChainPropertiesSerializer],\r\n  ['fee', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.witness_set_properties = OperationDataSerializer(42, [\r\n  ['owner', StringSerializer],\r\n  ['props', FlatMapSerializer(StringSerializer, VariableBinarySerializer)],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.account_update2 = OperationDataSerializer(43, [\r\n  ['account', StringSerializer],\r\n  ['owner', OptionalSerializer(AuthoritySerializer)],\r\n  ['active', OptionalSerializer(AuthoritySerializer)],\r\n  ['posting', OptionalSerializer(AuthoritySerializer)],\r\n  ['memo_key', OptionalSerializer(PublicKeySerializer)],\r\n  ['json_metadata', StringSerializer],\r\n  ['posting_json_metadata', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.create_proposal = OperationDataSerializer(44, [\r\n  ['creator', StringSerializer],\r\n  ['receiver', StringSerializer],\r\n  ['start_date', DateSerializer],\r\n  ['end_date', DateSerializer],\r\n  ['daily_pay', AssetSerializer],\r\n  ['subject', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.update_proposal_votes = OperationDataSerializer(45, [\r\n  ['voter', StringSerializer],\r\n  ['proposal_ids', ArraySerializer(Int64Serializer)],\r\n  ['approve', BooleanSerializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nOperationSerializers.remove_proposal = OperationDataSerializer(46, [\r\n  ['proposal_owner', StringSerializer],\r\n  ['proposal_ids', ArraySerializer(Int64Serializer)],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nconst ProposalUpdateSerializer = ObjectSerializer([\r\n  ['end_date', DateSerializer]\r\n])\r\n\r\nOperationSerializers.update_proposal = OperationDataSerializer(47, [\r\n  ['proposal_id', UInt64Serializer],\r\n  ['creator', StringSerializer],\r\n  ['daily_pay', AssetSerializer],\r\n  ['subject', StringSerializer],\r\n  ['permlink', StringSerializer],\r\n  [\r\n    'extensions',\r\n    ArraySerializer(\r\n      StaticVariantSerializer([VoidSerializer, ProposalUpdateSerializer])\r\n    )\r\n  ]\r\n])\r\n\r\nOperationSerializers.collateralized_convert = OperationDataSerializer(48, [\r\n  ['owner', StringSerializer],\r\n  ['requestid', UInt32Serializer],\r\n  ['amount', AssetSerializer]\r\n])\r\n\r\nOperationSerializers.recurrent_transfer = OperationDataSerializer(49, [\r\n  ['from', StringSerializer],\r\n  ['to', StringSerializer],\r\n  ['amount', AssetSerializer],\r\n  ['memo', StringSerializer],\r\n  ['recurrence', UInt16Serializer],\r\n  ['executions', UInt16Serializer],\r\n  ['extensions', ArraySerializer(VoidSerializer)]\r\n])\r\n\r\nconst OperationSerializer = (buffer, operation) => {\r\n  const serializer = OperationSerializers[operation[0]]\r\n  if (!serializer) {\r\n    throw new Error(`No serializer for operation: ${operation[0]}`)\r\n  }\r\n  try {\r\n    serializer(buffer, operation[1])\r\n  } catch (error) {\r\n    error.message = `${operation[0]}: ${error.message}`\r\n    throw error\r\n  }\r\n}\r\n\r\nconst TransactionSerializer = ObjectSerializer([\r\n  ['ref_block_num', UInt16Serializer],\r\n  ['ref_block_prefix', UInt32Serializer],\r\n  ['expiration', DateSerializer],\r\n  ['operations', ArraySerializer(OperationSerializer)],\r\n  ['extensions', ArraySerializer(StringSerializer)]\r\n])\r\n\r\nconst EncryptedMemoSerializer = ObjectSerializer([\r\n  ['from', PublicKeySerializer],\r\n  ['to', PublicKeySerializer],\r\n  ['nonce', UInt64Serializer],\r\n  ['check', UInt32Serializer],\r\n  ['encrypted', BinarySerializer()]\r\n])\r\n\r\nexport const Serializer = {\r\n  Array: ArraySerializer,\r\n  Asset: AssetSerializer,\r\n  Authority: AuthoritySerializer,\r\n  Binary: BinarySerializer,\r\n  Boolean: BooleanSerializer,\r\n  Date: DateSerializer,\r\n  FlatMap: FlatMapSerializer,\r\n  Int16: Int16Serializer,\r\n  Int32: Int32Serializer,\r\n  Int64: Int64Serializer,\r\n  Int8: Int8Serializer,\r\n  Memo: EncryptedMemoSerializer,\r\n  Object: ObjectSerializer,\r\n  Operation: OperationSerializer,\r\n  Optional: OptionalSerializer,\r\n  Price: PriceSerializer,\r\n  PublicKey: PublicKeySerializer,\r\n  StaticVariant: StaticVariantSerializer,\r\n  String: StringSerializer,\r\n  Transaction: TransactionSerializer,\r\n  UInt16: UInt16Serializer,\r\n  UInt32: UInt32Serializer,\r\n  UInt64: UInt64Serializer,\r\n  UInt8: UInt8Serializer,\r\n  Void: VoidSerializer\r\n}\r\n","import { ByteBuffer } from '../helpers/ByteBuffer.js'\r\n// import ByteBuffer2 from 'bytebuffer-hex-custom'\r\nimport { config } from '../config.js'\r\nimport { sha256 } from '../helpers/crypto.js'\r\nimport { Serializer } from '../helpers/serializer.js'\r\nimport { hexToUint8Array, uint8ArrayToHex } from '../helpers/uint8Array.js'\r\n\r\nconst CHAIN_ID = hexToUint8Array(config.chain_id)\r\n\r\n/**\r\n * Sign a transaction by keys (supports multi signature)\r\n * @param transaction - transaction to be signed\r\n * @param keys - Array of keys<Buffer>\r\n */\r\nexport const signTransaction = (transaction, keys) => {\r\n  const { digest, txId } = transactionDigest(transaction, CHAIN_ID)\r\n  const signedTransaction = { ...transaction }\r\n  if (!signedTransaction.signatures) {\r\n    signedTransaction.signatures = []\r\n  }\r\n  if (!Array.isArray(keys)) {\r\n    keys = [keys]\r\n  }\r\n  for (const key of keys) {\r\n    const signature = key.sign(digest)\r\n    signedTransaction.signatures.push(signature.customToString())\r\n  }\r\n\r\n  return { signedTransaction, txId }\r\n}\r\n\r\n/** Serialize transaction */\r\nexport const transactionDigest = (transaction, chainId = CHAIN_ID) => {\r\n  const buffer = new ByteBuffer(\r\n    ByteBuffer.DEFAULT_CAPACITY,\r\n    ByteBuffer.LITTLE_ENDIAN\r\n  )\r\n  // const buffer2 = new ByteBuffer2(\r\n  //   ByteBuffer2.DEFAULT_CAPACITY,\r\n  //   ByteBuffer2.LITTLE_ENDIAN\r\n  // )\r\n  const temp = { ...transaction }\r\n  // const temp2 = { ...transaction }\r\n  try {\r\n    Serializer.Transaction(buffer, temp)\r\n    // Serializer.Transaction(buffer2, temp2)\r\n  } catch (cause) {\r\n    throw new Error('Unable to serialize transaction: ' + cause)\r\n  }\r\n  buffer.flip()\r\n  // console.log(buffer.toBuffer())\r\n  // console.log(buffer2.toBuffer())\r\n  const transactionData = new Uint8Array(buffer.toBuffer())\r\n  // console.log(uint8ArrayToHex(transactionData))\r\n  const txId = uint8ArrayToHex(sha256(transactionData)).slice(0, 40)\r\n  const digest = sha256(new Uint8Array([...chainId, ...transactionData]))\r\n  return { digest, txId }\r\n}\r\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.8.4\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from 'axios'\r\nimport { config } from '../config.js'\r\n\r\nlet nodeIndex = 0\r\nlet numTries = 0\r\n\r\n/**\r\n * Make calls to hive node and retry - Only if provided config.node is an array\r\n * @param {string}method - e.g. condenser_api.get_dynamic_global_properties\r\n * @param {[any]|object}params - an array or object\r\n * @param {number}timeout - optional - default 5 seconds\r\n * @param {number}retry - optional - default 5 retries before throw\r\n */\r\nexport const call = async (method, params = [], timeout = config.timeout, retry = config.retry) => {\r\n  let node = ''\r\n  if (Array.isArray(config.node) && config.node.length > 0) {\r\n    node = config.node[nodeIndex]\r\n  } else {\r\n    node = config.node\r\n  }\r\n  const body = JSON.stringify({\r\n    jsonrpc: '2.0',\r\n    method,\r\n    params,\r\n    id: 1\r\n  })\r\n  try {\r\n    const res = await callWithTimeout(node, body, timeout)\r\n    numTries = 0\r\n    return res\r\n  } catch (e) {\r\n    numTries++\r\n    if (!Array.isArray(config.node) || numTries > retry) {\r\n      throw e\r\n    }\r\n    await changeNode()\r\n    return call(method, params, timeout, retry)\r\n  }\r\n}\r\n\r\nconst callWithTimeout = (url, body, timeout) => {\r\n  const conf = {}\r\n  if (config.axiosAdapter !== null) {\r\n    conf.adapter = config.axiosAdapter\r\n  }\r\n  // Create a cancel token\r\n  const source = axios.CancelToken.source()\r\n  let resolved = 0\r\n  let timerId\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        url,\r\n        body,\r\n        { ...conf, cancelToken: source.token }\r\n      )\r\n      .then(res => {\r\n        if (res && res.status === 200) {\r\n          resolved = 1\r\n          resolve(res.data)\r\n        } else {\r\n          reject(new Error(`Unexpected response status: ${res.status}`))\r\n        }\r\n      }).catch(e => {\r\n        reject(e)\r\n      }).finally(() => {\r\n        if (timerId) {\r\n          clearTimeout(timerId)\r\n        }\r\n      })\r\n    timerId = setTimeout(() => {\r\n      if (!resolved) {\r\n        source.cancel('Operation canceled by timeout')\r\n        reject(new Error(`Network timeout: ${url}: ${body}`))\r\n      }\r\n    }, timeout * 1000)\r\n  })\r\n}\r\n\r\n// The default axios adapter creates infinite sockets which leads to memory leak in Deno\r\n// Confirmed to NOT be a problem in nodejs\r\n// The following fixes the problem in Deno\r\nif ('Deno' in globalThis) {\r\n  config.axiosAdapter = async (config) => {\r\n    const { method, url, headers, data, ...rest } = config\r\n    const response = await fetch(url, {\r\n      method,\r\n      headers: new Headers(headers),\r\n      body: data,\r\n      ...rest // Additional configurations if needed\r\n    })\r\n    return {\r\n      data: await response.json(),\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      headers: Object.fromEntries(response.headers.entries()),\r\n      config,\r\n      request: response\r\n    }\r\n  }\r\n}\r\n\r\n/** Validate and use another RPC node */\r\nconst changeNode = async (newNodeIndex = nodeIndex + 1, tries = 0) => {\r\n  if (!Array.isArray(config.node)) {\r\n    return\r\n  }\r\n  if (tries > config.node.length) {\r\n    throw new Error(`Can't find a working node! Current nodes are: ${config.node.join(', ')}`)\r\n  }\r\n  if (newNodeIndex > config.node.length - 1) {\r\n    newNodeIndex = 0\r\n  }\r\n  const body = JSON.stringify({\r\n    jsonrpc: '2.0',\r\n    method: 'condenser_api.get_accounts',\r\n    params: [['mahdiyari']],\r\n    id: 189\r\n  })\r\n  try {\r\n    const res = await callWithTimeout(config.node[newNodeIndex], body, config.timeout)\r\n    if (res && res.id === 189 && res.result && res.result[0] && res.result[0].name === 'mahdiyari') {\r\n      nodeIndex = newNodeIndex\r\n    } else {\r\n      return changeNode(newNodeIndex + 1, tries + 1)\r\n    }\r\n  } catch {\r\n    return changeNode(newNodeIndex + 1, tries + 1)\r\n  }\r\n}\r\n\r\n// Periodic healthcheck of the current node every 30s\r\nconst healthcheck = setInterval(async () => {\r\n  if (!Array.isArray(config.node)) {\r\n    return\r\n  }\r\n  const body = JSON.stringify({\r\n    jsonrpc: '2.0',\r\n    method: 'condenser_api.get_accounts',\r\n    params: [['mahdiyari']],\r\n    id: 88885\r\n  })\r\n  try {\r\n    const res = await callWithTimeout(config.node[nodeIndex], body, config.timeout)\r\n    if (res && res.id === 88885 && res.result && res.result[0] && res.result[0].name === 'mahdiyari') {\r\n    // do nothing\r\n    } else {\r\n      changeNode()\r\n    }\r\n  } catch {\r\n    changeNode()\r\n  }\r\n}, config.healthcheckInterval)\r\n\r\n// Don't keep the app active just because of this interval\r\nhealthcheck.unref()\r\n","import { PublicKey } from './PublicKey.js'\r\nimport { secp256k1 } from '@noble/curves/secp256k1'\r\nimport { hexToUint8Array, uint8ArrayToHex } from './uint8Array.js'\r\n\r\n/** ECDSA (secp256k1) signature. */\r\nexport class Signature {\r\n  constructor (data, recovery, compressed = true) {\r\n    this.data = data\r\n    this.recovery = recovery\r\n    this.compressed = compressed\r\n  }\r\n\r\n  static from (string) {\r\n    if (typeof string === 'string') {\r\n      const temp = hexToUint8Array(string)\r\n      let recovery = parseInt(uint8ArrayToHex(temp.subarray(0, 1)), 16) - 31\r\n      let compressed = true\r\n      // non-compressed signatures have -4\r\n      // https://github.com/bitcoin/bitcoin/blob/95ea54ba089610019a74c1176a2c7c0dba144b1c/src/key.cpp#L257\r\n      if (recovery < 0) {\r\n        compressed = false\r\n        recovery = recovery + 4\r\n      }\r\n      const data = temp.subarray(1)\r\n      return new Signature(data, recovery, compressed)\r\n    } else {\r\n      return new Error('Expected string for data')\r\n    }\r\n  }\r\n\r\n  toBuffer () {\r\n    const buffer = new Uint8Array(65).fill(0)\r\n    if (this.compressed) {\r\n      buffer[0] = (this.recovery + 31) & 0xFF\r\n    } else {\r\n      buffer[0] = (this.recovery + 27) & 0xFF\r\n    }\r\n    buffer.set(this.data, 1)\r\n    return buffer\r\n  }\r\n\r\n  customToString () {\r\n    return uint8ArrayToHex(this.toBuffer())\r\n  }\r\n\r\n  getPublicKey (message) {\r\n    if (message instanceof Uint8Array && message.length !== 32) {\r\n      return new Error('Expected a valid sha256 hash as message')\r\n    }\r\n    if (typeof message === 'string' && message.length !== 64) {\r\n      return new Error('Expected a valid sha256 hash as message')\r\n    }\r\n    const sig = secp256k1.Signature.fromCompact(this.data)\r\n    const temp = new secp256k1.Signature(sig.r, sig.s, this.recovery)\r\n    return new PublicKey(temp.recoverPublicKey(message).toRawBytes())\r\n  }\r\n}\r\n","import bs58 from 'bs58'\r\nimport { secp256k1 } from '@noble/curves/secp256k1'\r\nimport { config } from '../config.js'\r\nimport { sha256, sha512 } from './crypto.js'\r\nimport { PublicKey } from './PublicKey.js'\r\nimport { Signature } from './Signature.js'\r\n\r\nconst NETWORK_ID = new Uint8Array([0x80])\r\nconst DEFAULT_ADDRESS_PREFIX = config.address_prefix\r\n\r\n/** ECDSA (secp256k1) private key. */\r\nexport class PrivateKey {\r\n  constructor (key) {\r\n    this.key = key\r\n    try {\r\n      secp256k1.getPublicKey(key)\r\n    } catch (e) {\r\n      throw new Error('invalid private key')\r\n    }\r\n  }\r\n\r\n  /** Convenience to create a new instance from WIF string or Uint8Array */\r\n  static from (value) {\r\n    if (typeof value === 'string') {\r\n      return PrivateKey.fromString(value)\r\n    } else {\r\n      return new PrivateKey(value)\r\n    }\r\n  }\r\n\r\n  /** Create a new instance from a WIF-encoded key. */\r\n  static fromString (wif) {\r\n    return new PrivateKey(decodePrivate(wif).subarray(1))\r\n  }\r\n\r\n  /** Create a new instance from a seed. */\r\n  static fromSeed (seed) {\r\n    return new PrivateKey(sha256(seed))\r\n  }\r\n\r\n  /** Create key from username and password. */\r\n  static fromLogin (username, password, role = 'active') {\r\n    const seed = username + role + password\r\n    return PrivateKey.fromSeed(seed)\r\n  }\r\n\r\n  /**\r\n   * Sign message.\r\n   * @param message 32-byte message.\r\n   */\r\n  sign (message) {\r\n    const options = {\r\n      extraEntropy: true,\r\n      lowS: true\r\n    }\r\n    const rv = secp256k1.sign(message, this.key, options)\r\n    return Signature.from((rv.recovery + 31).toString(16) + rv.toCompactHex())\r\n  }\r\n\r\n  /** Derive the public key for this private key. */\r\n  createPublic (prefix = DEFAULT_ADDRESS_PREFIX) {\r\n    return new PublicKey(secp256k1.getPublicKey(this.key), prefix)\r\n  }\r\n\r\n  /** Return a WIF-encoded representation of the key. */\r\n  toString () {\r\n    return encodePrivate(new Uint8Array([...NETWORK_ID, ...this.key]))\r\n  }\r\n\r\n  /**\r\n   * Used by `utils.inspect` and `console.log` in node.js. Does not show the full key\r\n   * to get the full encoded key you need to explicitly call {@link toString}.\r\n   */\r\n  inspect () {\r\n    const key = this.toString()\r\n    return `PrivateKey: ${key.slice(0, 6)}...${key.slice(-6)}`\r\n  }\r\n\r\n  /**\r\n   * Get shared secret for memo cryptography\r\n   */\r\n  getSharedSecret (publicKey) {\r\n    const s = secp256k1.getSharedSecret(this.key, publicKey.key)\r\n    // strip the parity byte\r\n    return sha512(s.subarray(1))\r\n  }\r\n\r\n  /**\r\n   * Returns a randomly generated instance of PrivateKey\r\n   * Might take up to 250ms\r\n   */\r\n  static randomKey () {\r\n    return new PrivateKey(secp256k1.utils.randomPrivateKey())\r\n  }\r\n}\r\n\r\nconst doubleSha256 = input => {\r\n  const dbl = sha256(sha256(input))\r\n  return dbl\r\n}\r\n\r\n/** Encode bs58+doubleSha256-checksum private key. */\r\nconst encodePrivate = key => {\r\n  // assert.equal(key.readUInt8(0), 0x80, 'private key network id mismatch')\r\n  const checksum = doubleSha256(key)\r\n  return bs58.encode(new Uint8Array([...key, ...checksum.slice(0, 4)]))\r\n}\r\n\r\n/** Decode bs58+doubleSha256-checksum encoded private key. */\r\nconst decodePrivate = encodedKey => {\r\n  const buffer = bs58.decode(encodedKey)\r\n  // assert.deepEqual(buffer.slice(0, 1), NETWORK_ID, 'private key network id mismatch')\r\n  // const checksum = buffer.slice(-4)\r\n  const key = buffer.slice(0, -4)\r\n  // const checksumVerify = doubleSha256(key).slice(0, 4)\r\n  // assert.deepEqual(checksumVerify, checksum, 'private key checksum mismatch')\r\n  return key\r\n}\r\n","/**\n * Internal assertion helpers.\n * @module\n */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nfunction abool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexport { abool, abytes, aexists, ahash, anumber, aoutput, isBytes };\n//# sourceMappingURL=_assert.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nimport { abytes, isBytes } from './_assert.js';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return BigInt(hex === '' ? '0' : '0x' + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    else if (isBytes(data))\n        data = copyBytes(data);\n    else\n        throw new Error('Uint8Array expected, got ' + typeof data);\n    return data;\n}\n/**\n * Checks if two U8A use same underlying buffer and overlaps (will corrupt and break if input and output same)\n */\nexport function overlapBytes(a, b) {\n    return (a.buffer === b.buffer && // probably will fail with some obscure proxies, but this is best we can do\n        a.byteOffset < b.byteOffset + b.byteLength && // a starts before b end\n        b.byteOffset < a.byteOffset + a.byteLength // b starts before a end\n    );\n}\n/**\n * If input and output overlap and input starts before output, we will overwrite end of input before\n * we start processing it, so this is not supported for most ciphers (except chacha/salse, which designed with this)\n */\nexport function complexOverlapBytes(input, output) {\n    // This is very cursed. It works somehow, but I'm completely unsure,\n    // reasoning about overlapping aligned windows is very hard.\n    if (overlapBytes(input, output) && input.byteOffset < output.byteOffset)\n        throw new Error('complex overlap of input and output is not supported');\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== 'object')\n        throw new Error('options must be defined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n// For runtime check if class implements interface\nexport class Hash {\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = (params, constructor) => {\n    function wrappedCipher(key, ...args) {\n        // Validate key\n        abytes(key);\n        // Validate nonce if nonceLength is present\n        if (params.nonceLength !== undefined) {\n            const nonce = args[0];\n            if (!nonce)\n                throw new Error('nonce / iv required');\n            if (params.varSizeNonce)\n                abytes(nonce);\n            else\n                abytes(nonce, params.nonceLength);\n        }\n        // Validate AAD if tagLength present\n        const tagl = params.tagLength;\n        if (tagl && args[1] !== undefined) {\n            abytes(args[1]);\n        }\n        const cipher = constructor(key, ...args);\n        const checkOutput = (fnLength, output) => {\n            if (output !== undefined) {\n                if (fnLength !== 2)\n                    throw new Error('cipher output not supported');\n                abytes(output);\n            }\n        };\n        // Create wrapped cipher with validation and single-use encryption\n        let called = false;\n        const wrCipher = {\n            encrypt(data, output) {\n                if (called)\n                    throw new Error('cannot encrypt() twice with same key + nonce');\n                called = true;\n                abytes(data);\n                checkOutput(cipher.encrypt.length, output);\n                return cipher.encrypt(data, output);\n            },\n            decrypt(data, output) {\n                abytes(data);\n                if (tagl && data.length < tagl)\n                    throw new Error('invalid ciphertext length: smaller than tagLength=' + tagl);\n                checkOutput(cipher.decrypt.length, output);\n                return cipher.decrypt(data, output);\n            },\n        };\n        return wrCipher;\n    }\n    Object.assign(wrappedCipher, params);\n    return wrappedCipher;\n};\nexport function getOutput(expectedLength, out, onlyAligned = true) {\n    if (out === undefined)\n        return new Uint8Array(expectedLength);\n    if (out.length !== expectedLength)\n        throw new Error('invalid output length, expected ' + expectedLength + ', got: ' + out.length);\n    if (onlyAligned && !isAligned32(out))\n        throw new Error('invalid output, must be aligned');\n    return out;\n}\n// Polyfill for Safari 14\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\nexport function u64Lengths(ciphertext, AAD) {\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n    setBigUint64(view, 8, BigInt(ciphertext.length), true);\n    return num;\n}\n// Is byte array aligned to 4 byte offset (u32)?\nexport function isAligned32(bytes) {\n    return bytes.byteOffset % 4 === 0;\n}\n// copy bytes to new u8a (aligned). Because Buffer.slice is broken.\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n//# sourceMappingURL=utils.js.map","/**\n * GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n *\n * Implemented in terms of GHash with conversion function for keys\n * GCM GHASH from\n * [NIST SP800-38d](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf),\n * SIV from\n * [RFC 8452](https://datatracker.ietf.org/doc/html/rfc8452).\n *\n * GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n * POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\n *\n * @module\n */\nimport { abytes, aexists, aoutput } from './_assert.js';\nimport { clean, copyBytes, createView, Hash, toBytes, u32 } from './utils.js';\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0, s1, s2, s3) => {\n    const hiBit = s3 & 1;\n    return {\n        s3: (s2 << 31) | (s3 >>> 1),\n        s2: (s1 << 31) | (s2 >>> 1),\n        s1: (s0 << 31) | (s1 >>> 1),\n        s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n    };\n};\nconst swapLE = (n) => (((n >>> 0) & 0xff) << 24) |\n    (((n >>> 8) & 0xff) << 16) |\n    (((n >>> 16) & 0xff) << 8) |\n    ((n >>> 24) & 0xff) |\n    0;\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k) {\n    k.reverse();\n    const hiBit = k[15] & 1;\n    // k >>= 1\n    let carry = 0;\n    for (let i = 0; i < k.length; i++) {\n        const t = k[i];\n        k[i] = (t >>> 1) | carry;\n        carry = (t & 1) << 7;\n    }\n    k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n    return k;\n}\nconst estimateWindow = (bytes) => {\n    if (bytes > 64 * 1024)\n        return 8;\n    if (bytes > 1024)\n        return 4;\n    return 2;\n};\nclass GHASH {\n    // We select bits per window adaptively based on expectedLength\n    constructor(key, expectedLength) {\n        this.blockLen = BLOCK_SIZE;\n        this.outputLen = BLOCK_SIZE;\n        this.s0 = 0;\n        this.s1 = 0;\n        this.s2 = 0;\n        this.s3 = 0;\n        this.finished = false;\n        key = toBytes(key);\n        abytes(key, 16);\n        const kView = createView(key);\n        let k0 = kView.getUint32(0, false);\n        let k1 = kView.getUint32(4, false);\n        let k2 = kView.getUint32(8, false);\n        let k3 = kView.getUint32(12, false);\n        // generate table of doubled keys (half of montgomery ladder)\n        const doubles = [];\n        for (let i = 0; i < 128; i++) {\n            doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n            ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n        }\n        const W = estimateWindow(expectedLength || 1024);\n        if (![1, 2, 4, 8].includes(W))\n            throw new Error('ghash: invalid window size, expected 2, 4 or 8');\n        this.W = W;\n        const bits = 128; // always 128 bits;\n        const windows = bits / W;\n        const windowSize = (this.windowSize = 2 ** W);\n        const items = [];\n        // Create precompute table for window of W bits\n        for (let w = 0; w < windows; w++) {\n            // truth table: 00, 01, 10, 11\n            for (let byte = 0; byte < windowSize; byte++) {\n                // prettier-ignore\n                let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n                for (let j = 0; j < W; j++) {\n                    const bit = (byte >>> (W - j - 1)) & 1;\n                    if (!bit)\n                        continue;\n                    const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n                    (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n                }\n                items.push({ s0, s1, s2, s3 });\n            }\n        }\n        this.t = items;\n    }\n    _updateBlock(s0, s1, s2, s3) {\n        (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n        const { W, t, windowSize } = this;\n        // prettier-ignore\n        let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n        const mask = (1 << W) - 1; // 2**W will kill performance.\n        let w = 0;\n        for (const num of [s0, s1, s2, s3]) {\n            for (let bytePos = 0; bytePos < 4; bytePos++) {\n                const byte = (num >>> (8 * bytePos)) & 0xff;\n                for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n                    const bit = (byte >>> (W * bitPos)) & mask;\n                    const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n                    (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n                    w += 1;\n                }\n            }\n        }\n        this.s0 = o0;\n        this.s1 = o1;\n        this.s2 = o2;\n        this.s3 = o3;\n    }\n    update(data) {\n        data = toBytes(data);\n        aexists(this);\n        const b32 = u32(data);\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        const left = data.length % BLOCK_SIZE;\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n            clean(ZEROS32); // clean tmp buffer\n        }\n        return this;\n    }\n    destroy() {\n        const { t } = this;\n        // clean precompute table\n        for (const elm of t) {\n            (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n        }\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        const { s0, s1, s2, s3 } = this;\n        const o32 = u32(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out;\n    }\n    digest() {\n        const res = new Uint8Array(BLOCK_SIZE);\n        this.digestInto(res);\n        this.destroy();\n        return res;\n    }\n}\nclass Polyval extends GHASH {\n    constructor(key, expectedLength) {\n        key = toBytes(key);\n        const ghKey = _toGHASHKey(copyBytes(key));\n        super(ghKey, expectedLength);\n        clean(ghKey);\n    }\n    update(data) {\n        data = toBytes(data);\n        aexists(this);\n        const b32 = u32(data);\n        const left = data.length % BLOCK_SIZE;\n        const blocks = Math.floor(data.length / BLOCK_SIZE);\n        for (let i = 0; i < blocks; i++) {\n            this._updateBlock(swapLE(b32[i * 4 + 3]), swapLE(b32[i * 4 + 2]), swapLE(b32[i * 4 + 1]), swapLE(b32[i * 4 + 0]));\n        }\n        if (left) {\n            ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n            this._updateBlock(swapLE(ZEROS32[3]), swapLE(ZEROS32[2]), swapLE(ZEROS32[1]), swapLE(ZEROS32[0]));\n            clean(ZEROS32);\n        }\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // tmp ugly hack\n        const { s0, s1, s2, s3 } = this;\n        const o32 = u32(out);\n        o32[0] = s0;\n        o32[1] = s1;\n        o32[2] = s2;\n        o32[3] = s3;\n        return out.reverse();\n    }\n}\nfunction wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key, msg.length).update(toBytes(msg)).digest();\n    const tmp = hashCons(new Uint8Array(16), 0);\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key, expectedLength) => hashCons(key, expectedLength);\n    return hashC;\n}\n/** GHash MAC for AES-GCM. */\nexport const ghash = wrapConstructorWithKey((key, expectedLength) => new GHASH(key, expectedLength));\n/** Polyval MAC for AES-SIV. */\nexport const polyval = wrapConstructorWithKey((key, expectedLength) => new Polyval(key, expectedLength));\n//# sourceMappingURL=_polyval.js.map","/**\n * [AES](https://en.wikipedia.org/wiki/Advanced_Encryption_Standard)\n * a.k.a. Advanced Encryption Standard\n * is a variant of Rijndael block cipher, standardized by NIST in 2001.\n * We provide the fastest available pure JS implementation.\n *\n * Data is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n * 1. **S-box**, table substitution\n * 2. **Shift rows**, cyclic shift left of all rows of data array\n * 3. **Mix columns**, multiplying every column by fixed polynomial\n * 4. **Add round key**, round_key xor i-th column of array\n *\n * Check out [FIPS-197](https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf)\n * and [original proposal](https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf)\n * @module\n */\nimport { abytes } from './_assert.js';\nimport { ghash, polyval } from './_polyval.js';\nimport { clean, complexOverlapBytes, concatBytes, copyBytes, createView, equalBytes, getOutput, isAligned32, overlapBytes, setBigUint64, u32, u8, wrapCipher, } from './utils.js';\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = /* @__PURE__ */ new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n// TODO: remove multiplication, binary ops only\nfunction mul2(n) {\n    return (n << 1) ^ (POLY & -(n >> 7));\n}\nfunction mul(a, b) {\n    let res = 0;\n    for (; b > 0; b >>= 1) {\n        // Montgomery ladder\n        res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n        a = mul2(a); // a = 2*a\n    }\n    return res;\n}\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n    const t = new Uint8Array(256);\n    for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x))\n        t[i] = x;\n    const box = new Uint8Array(256);\n    box[0] = 0x63; // first elm\n    for (let i = 0; i < 255; i++) {\n        let x = t[255 - i];\n        x |= x << 8;\n        box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n    }\n    clean(t);\n    return box;\n})();\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n// Rotate u32 by 8\nconst rotr32_8 = (n) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n) => (n << 8) | (n >>> 24);\n// The byte swap operation for uint32 (LE<->BE)\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox, fn) {\n    if (sbox.length !== 256)\n        throw new Error('Wrong sbox length');\n    const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n    const T1 = T0.map(rotl32_8);\n    const T2 = T1.map(rotl32_8);\n    const T3 = T2.map(rotl32_8);\n    const T01 = new Uint32Array(256 * 256);\n    const T23 = new Uint32Array(256 * 256);\n    const sbox2 = new Uint16Array(256 * 256);\n    for (let i = 0; i < 256; i++) {\n        for (let j = 0; j < 256; j++) {\n            const idx = i * 256 + j;\n            T01[idx] = T0[i] ^ T1[j];\n            T23[idx] = T2[i] ^ T3[j];\n            sbox2[idx] = (sbox[i] << 8) | sbox[j];\n        }\n    }\n    return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\nconst tableEncoding = /* @__PURE__ */ genTtable(sbox, (s) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2));\nconst tableDecoding = /* @__PURE__ */ genTtable(invSbox, (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14));\nconst xPowers = /* @__PURE__ */ (() => {\n    const p = new Uint8Array(16);\n    for (let i = 0, x = 1; i < 16; i++, x = mul2(x))\n        p[i] = x;\n    return p;\n})();\n/** Key expansion used in CTR. */\nfunction expandKeyLE(key) {\n    abytes(key);\n    const len = key.length;\n    if (![16, 24, 32].includes(len))\n        throw new Error('aes: invalid key size, should be 16, 24 or 32, got ' + len);\n    const { sbox2 } = tableEncoding;\n    const toClean = [];\n    if (!isAligned32(key))\n        toClean.push((key = copyBytes(key)));\n    const k32 = u32(key);\n    const Nk = k32.length;\n    const subByte = (n) => applySbox(sbox2, n, n, n, n);\n    const xk = new Uint32Array(len + 28); // expanded key\n    xk.set(k32);\n    // 4.3.1 Key expansion\n    for (let i = Nk; i < xk.length; i++) {\n        let t = xk[i - 1];\n        if (i % Nk === 0)\n            t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n        else if (Nk > 6 && i % Nk === 4)\n            t = subByte(t);\n        xk[i] = xk[i - Nk] ^ t;\n    }\n    clean(...toClean);\n    return xk;\n}\nfunction expandKeyDecLE(key) {\n    const encKey = expandKeyLE(key);\n    const xk = encKey.slice();\n    const Nk = encKey.length;\n    const { sbox2 } = tableEncoding;\n    const { T0, T1, T2, T3 } = tableDecoding;\n    // Inverse key by chunks of 4 (rounds)\n    for (let i = 0; i < Nk; i += 4) {\n        for (let j = 0; j < 4; j++)\n            xk[i + j] = encKey[Nk - i - 4 + j];\n    }\n    clean(encKey);\n    // apply InvMixColumn except first & last round\n    for (let i = 4; i < Nk - 4; i++) {\n        const x = xk[i];\n        const w = applySbox(sbox2, x, x, x, x);\n        xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n    }\n    return xk;\n}\n// Apply tables\nfunction apply0123(T01, T23, s0, s1, s2, s3) {\n    return (T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n        T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]);\n}\nfunction applySbox(sbox2, s0, s1, s2, s3) {\n    return (sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n        (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16));\n}\nfunction encrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableEncoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // last round (without mixcolumns, so using SBOX2 table)\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n// Can't be merged with encrypt: arg positions for apply0123 / applySbox are different\nfunction decrypt(xk, s0, s1, s2, s3) {\n    const { sbox2, T01, T23 } = tableDecoding;\n    let k = 0;\n    (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n    const rounds = xk.length / 4 - 2;\n    for (let i = 0; i < rounds; i++) {\n        const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n        const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n        const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n        const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n        (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n    }\n    // Last round\n    const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n    return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk, nonce, src, dst) {\n    abytes(nonce, BLOCK_SIZE);\n    abytes(src);\n    const srcLen = src.length;\n    dst = getOutput(srcLen, dst);\n    complexOverlapBytes(src, dst);\n    const ctr = nonce;\n    const c32 = u32(ctr);\n    // Fill block (empty, ctr=0)\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    const src32 = u32(src);\n    const dst32 = u32(dst);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        // Full 128 bit counter with wrap around\n        let carry = 1;\n        for (let i = ctr.length - 1; i >= 0; i--) {\n            carry = (carry + (ctr[i] & 0xff)) | 0;\n            ctr[i] = carry & 0xff;\n            carry >>>= 8;\n        }\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than block)\n    // It's possible to handle > u32 fast, but is it worth it?\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = u8(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n        clean(b32);\n    }\n    return dst;\n}\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(xk, isLE, nonce, src, dst) {\n    abytes(nonce, BLOCK_SIZE);\n    abytes(src);\n    dst = getOutput(src.length, dst);\n    const ctr = nonce; // write new value to nonce, so it can be re-used\n    const c32 = u32(ctr);\n    const view = createView(ctr);\n    const src32 = u32(src);\n    const dst32 = u32(dst);\n    const ctrPos = isLE ? 0 : 12;\n    const srcLen = src.length;\n    // Fill block (empty, ctr=0)\n    let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n    let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n    // process blocks\n    for (let i = 0; i + 4 <= src32.length; i += 4) {\n        dst32[i + 0] = src32[i + 0] ^ s0;\n        dst32[i + 1] = src32[i + 1] ^ s1;\n        dst32[i + 2] = src32[i + 2] ^ s2;\n        dst32[i + 3] = src32[i + 3] ^ s3;\n        ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n        view.setUint32(ctrPos, ctrNum, isLE);\n        ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n    }\n    // leftovers (less than a block)\n    const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n    if (start < srcLen) {\n        const b32 = new Uint32Array([s0, s1, s2, s3]);\n        const buf = u8(b32);\n        for (let i = start, pos = 0; i < srcLen; i++, pos++)\n            dst[i] = src[i] ^ buf[pos];\n        clean(b32);\n    }\n    return dst;\n}\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr = /* @__PURE__ */ wrapCipher({ blockSize: 16, nonceLength: 16 }, function aesctr(key, nonce) {\n    function processCtr(buf, dst) {\n        abytes(buf);\n        if (dst !== undefined) {\n            abytes(dst);\n            if (!isAligned32(dst))\n                throw new Error('unaligned destination');\n        }\n        const xk = expandKeyLE(key);\n        const n = copyBytes(nonce); // align + avoid changing\n        const toClean = [xk, n];\n        if (!isAligned32(buf))\n            toClean.push((buf = copyBytes(buf)));\n        const out = ctrCounter(xk, n, buf, dst);\n        clean(...toClean);\n        return out;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCtr(plaintext, dst),\n        decrypt: (ciphertext, dst) => processCtr(ciphertext, dst),\n    };\n});\nfunction validateBlockDecrypt(data) {\n    abytes(data);\n    if (data.length % BLOCK_SIZE !== 0) {\n        throw new Error('aes-(cbc/ecb).decrypt ciphertext should consist of blocks with size ' + BLOCK_SIZE);\n    }\n}\nfunction validateBlockEncrypt(plaintext, pcks5, dst) {\n    abytes(plaintext);\n    let outLen = plaintext.length;\n    const remaining = outLen % BLOCK_SIZE;\n    if (!pcks5 && remaining !== 0)\n        throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n    if (!isAligned32(plaintext))\n        plaintext = copyBytes(plaintext);\n    const b = u32(plaintext);\n    if (pcks5) {\n        let left = BLOCK_SIZE - remaining;\n        if (!left)\n            left = BLOCK_SIZE; // if no bytes left, create empty padding block\n        outLen = outLen + left;\n    }\n    dst = getOutput(outLen, dst);\n    complexOverlapBytes(plaintext, dst);\n    const o = u32(dst);\n    return { b, o, out: dst };\n}\nfunction validatePCKS(data, pcks5) {\n    if (!pcks5)\n        return data;\n    const len = data.length;\n    if (!len)\n        throw new Error('aes/pcks5: empty ciphertext not allowed');\n    const lastByte = data[len - 1];\n    if (lastByte <= 0 || lastByte > 16)\n        throw new Error('aes/pcks5: wrong padding');\n    const out = data.subarray(0, -lastByte);\n    for (let i = 0; i < lastByte; i++)\n        if (data[len - i - 1] !== lastByte)\n            throw new Error('aes/pcks5: wrong padding');\n    return out;\n}\nfunction padPCKS(left) {\n    const tmp = new Uint8Array(16);\n    const tmp32 = u32(tmp);\n    tmp.set(left);\n    const paddingByte = BLOCK_SIZE - left.length;\n    for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++)\n        tmp[i] = paddingByte;\n    return tmp32;\n}\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb = /* @__PURE__ */ wrapCipher({ blockSize: 16 }, function aesecb(key, opts = {}) {\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt(plaintext, dst) {\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            const xk = expandKeyLE(key);\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            clean(xk);\n            return _out;\n        },\n        decrypt(ciphertext, dst) {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            dst = getOutput(ciphertext.length, dst);\n            const toClean = [xk];\n            if (!isAligned32(ciphertext))\n                toClean.push((ciphertext = copyBytes(ciphertext)));\n            complexOverlapBytes(ciphertext, dst);\n            const b = u32(ciphertext);\n            const o = u32(dst);\n            for (let i = 0; i + 4 <= b.length;) {\n                const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            clean(...toClean);\n            return validatePCKS(dst, pcks5);\n        },\n    };\n});\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round’s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc = /* @__PURE__ */ wrapCipher({ blockSize: 16, nonceLength: 16 }, function aescbc(key, iv, opts = {}) {\n    const pcks5 = !opts.disablePadding;\n    return {\n        encrypt(plaintext, dst) {\n            const xk = expandKeyLE(key);\n            const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n            let _iv = iv;\n            const toClean = [xk];\n            if (!isAligned32(_iv))\n                toClean.push((_iv = copyBytes(_iv)));\n            const n32 = u32(_iv);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            let i = 0;\n            for (; i + 4 <= b.length;) {\n                (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            if (pcks5) {\n                const tmp32 = padPCKS(plaintext.subarray(i * 4));\n                (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n                ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n                (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n            }\n            clean(...toClean);\n            return _out;\n        },\n        decrypt(ciphertext, dst) {\n            validateBlockDecrypt(ciphertext);\n            const xk = expandKeyDecLE(key);\n            let _iv = iv;\n            const toClean = [xk];\n            if (!isAligned32(_iv))\n                toClean.push((_iv = copyBytes(_iv)));\n            const n32 = u32(_iv);\n            dst = getOutput(ciphertext.length, dst);\n            if (!isAligned32(ciphertext))\n                toClean.push((ciphertext = copyBytes(ciphertext)));\n            complexOverlapBytes(ciphertext, dst);\n            const b = u32(ciphertext);\n            const o = u32(dst);\n            // prettier-ignore\n            let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n            for (let i = 0; i + 4 <= b.length;) {\n                // prettier-ignore\n                const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n                (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n                const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n                (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n            }\n            clean(...toClean);\n            return validatePCKS(dst, pcks5);\n        },\n    };\n});\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb = /* @__PURE__ */ wrapCipher({ blockSize: 16, nonceLength: 16 }, function aescfb(key, iv) {\n    function processCfb(src, isEncrypt, dst) {\n        abytes(src);\n        const srcLen = src.length;\n        dst = getOutput(srcLen, dst);\n        if (overlapBytes(src, dst))\n            throw new Error('overlapping src and dst not supported.');\n        const xk = expandKeyLE(key);\n        let _iv = iv;\n        const toClean = [xk];\n        if (!isAligned32(_iv))\n            toClean.push((_iv = copyBytes(_iv)));\n        if (!isAligned32(src))\n            toClean.push((src = copyBytes(src)));\n        const src32 = u32(src);\n        const dst32 = u32(dst);\n        const next32 = isEncrypt ? dst32 : src32;\n        const n32 = u32(_iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= src32.length;) {\n            const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n            dst32[i + 0] = src32[i + 0] ^ e0;\n            dst32[i + 1] = src32[i + 1] ^ e1;\n            dst32[i + 2] = src32[i + 2] ^ e2;\n            dst32[i + 3] = src32[i + 3] ^ e3;\n            (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n        }\n        // leftovers (less than block)\n        const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n        if (start < srcLen) {\n            ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n            const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n            for (let i = start, pos = 0; i < srcLen; i++, pos++)\n                dst[i] = src[i] ^ buf[pos];\n            clean(buf);\n        }\n        clean(...toClean);\n        return dst;\n    }\n    return {\n        encrypt: (plaintext, dst) => processCfb(plaintext, true, dst),\n        decrypt: (ciphertext, dst) => processCfb(ciphertext, false, dst),\n    };\n});\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(fn, isLE, key, data, AAD) {\n    const aadLength = AAD == null ? 0 : AAD.length;\n    const h = fn.create(key, data.length + aadLength);\n    if (AAD)\n        h.update(AAD);\n    h.update(data);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    if (AAD)\n        setBigUint64(view, 0, BigInt(aadLength * 8), isLE);\n    setBigUint64(view, 8, BigInt(data.length * 8), isLE);\n    h.update(num);\n    const res = h.digest();\n    clean(num);\n    return res;\n}\n/**\n * GCM: Galois/Counter Mode.\n * Modern, parallel version of CTR, with MAC.\n * Be careful: MACs can be forged.\n * Unsafe to use random nonces under the same key, due to collision chance.\n * As for nonce size, prefer 12-byte, instead of 8-byte.\n */\nexport const gcm = /* @__PURE__ */ wrapCipher({ blockSize: 16, nonceLength: 12, tagLength: 16, varSizeNonce: true }, function aesgcm(key, nonce, AAD) {\n    // NIST 800-38d doesn't enforce minimum nonce length.\n    // We enforce 8 bytes for compat with openssl.\n    // 12 bytes are recommended. More than 12 bytes would be converted into 12.\n    if (nonce.length < 8)\n        throw new Error('aes/gcm: invalid nonce length');\n    const tagLength = 16;\n    function _computeTag(authKey, tagMask, data) {\n        const tag = computeTag(ghash, false, authKey, data, AAD);\n        for (let i = 0; i < tagMask.length; i++)\n            tag[i] ^= tagMask[i];\n        return tag;\n    }\n    function deriveKeys() {\n        const xk = expandKeyLE(key);\n        const authKey = EMPTY_BLOCK.slice();\n        const counter = EMPTY_BLOCK.slice();\n        ctr32(xk, false, counter, counter, authKey);\n        // NIST 800-38d, page 15: different behavior for 96-bit and non-96-bit nonces\n        if (nonce.length === 12) {\n            counter.set(nonce);\n        }\n        else {\n            const nonceLen = EMPTY_BLOCK.slice();\n            const view = createView(nonceLen);\n            setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n            // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n            const g = ghash.create(authKey).update(nonce).update(nonceLen);\n            g.digestInto(counter); // digestInto doesn't trigger '.destroy'\n            g.destroy();\n        }\n        const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n        return { xk, authKey, counter, tagMask };\n    }\n    return {\n        encrypt(plaintext) {\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const out = new Uint8Array(plaintext.length + tagLength);\n            const toClean = [xk, authKey, counter, tagMask];\n            if (!isAligned32(plaintext))\n                toClean.push((plaintext = copyBytes(plaintext)));\n            ctr32(xk, false, counter, plaintext, out.subarray(0, plaintext.length));\n            const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n            toClean.push(tag);\n            out.set(tag, plaintext.length);\n            clean(...toClean);\n            return out;\n        },\n        decrypt(ciphertext) {\n            const { xk, authKey, counter, tagMask } = deriveKeys();\n            const toClean = [xk, authKey, tagMask, counter];\n            if (!isAligned32(ciphertext))\n                toClean.push((ciphertext = copyBytes(ciphertext)));\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = _computeTag(authKey, tagMask, data);\n            toClean.push(tag);\n            if (!equalBytes(tag, passedTag))\n                throw new Error('aes/gcm: invalid ghash tag');\n            const out = ctr32(xk, false, counter, data);\n            clean(...toClean);\n            return out;\n        },\n    };\n});\nconst limit = (name, min, max) => (value) => {\n    if (!Number.isSafeInteger(value) || min > value || value > max) {\n        const minmax = '[' + min + '..' + max + ']';\n        throw new Error('' + name + ': expected value in range ' + minmax + ', got ' + value);\n    }\n};\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const siv = /* @__PURE__ */ wrapCipher({ blockSize: 16, nonceLength: 12, tagLength: 16, varSizeNonce: true }, function aessiv(key, nonce, AAD) {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(key, 16, 24, 32);\n    NONCE_LIMIT(nonce.length);\n    if (AAD !== undefined)\n        AAD_LIMIT(AAD.length);\n    function deriveKeys() {\n        const xk = expandKeyLE(key);\n        const encKey = new Uint8Array(key.length);\n        const authKey = new Uint8Array(16);\n        const toClean = [xk, encKey];\n        let _nonce = nonce;\n        if (!isAligned32(_nonce))\n            toClean.push((_nonce = copyBytes(_nonce)));\n        const n32 = u32(_nonce);\n        // prettier-ignore\n        let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n        let counter = 0;\n        for (const derivedKey of [authKey, encKey].map(u32)) {\n            const d32 = u32(derivedKey);\n            for (let i = 0; i < d32.length; i += 2) {\n                // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n                const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n                d32[i + 0] = o0;\n                d32[i + 1] = o1;\n                s0 = ++counter; // increment counter inside state\n            }\n        }\n        const res = { authKey, encKey: expandKeyLE(encKey) };\n        // Cleanup\n        clean(...toClean);\n        return res;\n    }\n    function _computeTag(encKey, authKey, data) {\n        const tag = computeTag(polyval, true, authKey, data, AAD);\n        // Compute the expected tag by XORing S_s and the nonce, clearing the\n        // most significant bit of the last byte and encrypting with the\n        // message-encryption key.\n        for (let i = 0; i < 12; i++)\n            tag[i] ^= nonce[i];\n        tag[15] &= 0x7f; // Clear the highest bit\n        // encrypt tag as block\n        const t32 = u32(tag);\n        // prettier-ignore\n        let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n        ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n        (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n        return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey, tag, input) {\n        let block = copyBytes(tag);\n        block[15] |= 0x80; // Force highest bit\n        const res = ctr32(encKey, true, block, input);\n        // Cleanup\n        clean(block);\n        return res;\n    }\n    return {\n        encrypt(plaintext) {\n            PLAIN_LIMIT(plaintext.length);\n            const { encKey, authKey } = deriveKeys();\n            const tag = _computeTag(encKey, authKey, plaintext);\n            const toClean = [encKey, authKey, tag];\n            if (!isAligned32(plaintext))\n                toClean.push((plaintext = copyBytes(plaintext)));\n            const out = new Uint8Array(plaintext.length + tagLength);\n            out.set(tag, plaintext.length);\n            out.set(processSiv(encKey, tag, plaintext));\n            // Cleanup\n            clean(...toClean);\n            return out;\n        },\n        decrypt(ciphertext) {\n            CIPHER_LIMIT(ciphertext.length);\n            const tag = ciphertext.subarray(-tagLength);\n            const { encKey, authKey } = deriveKeys();\n            const toClean = [encKey, authKey];\n            if (!isAligned32(ciphertext))\n                toClean.push((ciphertext = copyBytes(ciphertext)));\n            const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n            const expectedTag = _computeTag(encKey, authKey, plaintext);\n            toClean.push(expectedTag);\n            if (!equalBytes(tag, expectedTag)) {\n                clean(...toClean);\n                throw new Error('invalid polyval tag');\n            }\n            // Cleanup\n            clean(...toClean);\n            return plaintext;\n        },\n    };\n});\nfunction isBytes32(a) {\n    return (a instanceof Uint32Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint32Array'));\n}\nfunction encryptBlock(xk, block) {\n    abytes(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_encryptBlock accepts result of expandKeyLE');\n    const b32 = u32(block);\n    let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\nfunction decryptBlock(xk, block) {\n    abytes(block, 16);\n    if (!isBytes32(xk))\n        throw new Error('_decryptBlock accepts result of expandKeyLE');\n    const b32 = u32(block);\n    let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n    (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n    return block;\n}\n/**\n * AES-W (base for AESKW/AESKWP).\n * Specs: [SP800-38F](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38F.pdf),\n * [RFC 3394](https://datatracker.ietf.org/doc/rfc3394/),\n * [RFC 5649](https://datatracker.ietf.org/doc/rfc5649/).\n */\nconst AESW = {\n    /*\n    High-level pseudocode:\n    ```\n    A: u64 = IV\n    out = []\n    for (let i=0, ctr = 0; i<6; i++) {\n      for (const chunk of chunks(plaintext, 8)) {\n        A ^= swapEndianess(ctr++)\n        [A, res] = chunks(encrypt(A || chunk), 8);\n        out ||= res\n      }\n    }\n    out = A || out\n    ```\n    Decrypt is the same, but reversed.\n    */\n    encrypt(kek, out) {\n        // Size is limited to 4GB, otherwise ctr will overflow and we'll need to switch to bigints.\n        // If you need it larger, open an issue.\n        if (out.length >= 2 ** 32)\n            throw new Error('plaintext should be less than 4gb');\n        const xk = expandKeyLE(kek);\n        if (out.length === 16)\n            encryptBlock(xk, out);\n        else {\n            const o32 = u32(out);\n            // prettier-ignore\n            let a0 = o32[0], a1 = o32[1]; // A\n            for (let j = 0, ctr = 1; j < 6; j++) {\n                for (let pos = 2; pos < o32.length; pos += 2, ctr++) {\n                    const { s0, s1, s2, s3 } = encrypt(xk, a0, a1, o32[pos], o32[pos + 1]);\n                    // A = MSB(64, B) ^ t where t = (n*j)+i\n                    (a0 = s0), (a1 = s1 ^ byteSwap(ctr)), (o32[pos] = s2), (o32[pos + 1] = s3);\n                }\n            }\n            (o32[0] = a0), (o32[1] = a1); // out = A || out\n        }\n        xk.fill(0);\n    },\n    decrypt(kek, out) {\n        if (out.length - 8 >= 2 ** 32)\n            throw new Error('ciphertext should be less than 4gb');\n        const xk = expandKeyDecLE(kek);\n        const chunks = out.length / 8 - 1; // first chunk is IV\n        if (chunks === 1)\n            decryptBlock(xk, out);\n        else {\n            const o32 = u32(out);\n            // prettier-ignore\n            let a0 = o32[0], a1 = o32[1]; // A\n            for (let j = 0, ctr = chunks * 6; j < 6; j++) {\n                for (let pos = chunks * 2; pos >= 1; pos -= 2, ctr--) {\n                    a1 ^= byteSwap(ctr);\n                    const { s0, s1, s2, s3 } = decrypt(xk, a0, a1, o32[pos], o32[pos + 1]);\n                    (a0 = s0), (a1 = s1), (o32[pos] = s2), (o32[pos + 1] = s3);\n                }\n            }\n            (o32[0] = a0), (o32[1] = a1);\n        }\n        xk.fill(0);\n    },\n};\nconst AESKW_IV = /* @__PURE__ */ new Uint8Array(8).fill(0xa6); // A6A6A6A6A6A6A6A6\n/**\n * AES-KW (key-wrap). Injects static IV into plaintext, adds counter, encrypts 6 times.\n * Reduces block size from 16 to 8 bytes.\n * For padded version, use aeskwp.\n * [RFC 3394](https://datatracker.ietf.org/doc/rfc3394/),\n * [NIST.SP.800-38F](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38F.pdf).\n */\nexport const aeskw = /* @__PURE__ */ wrapCipher({ blockSize: 8 }, (kek) => ({\n    encrypt(plaintext) {\n        if (!plaintext.length || plaintext.length % 8 !== 0)\n            throw new Error('invalid plaintext length');\n        if (plaintext.length === 8)\n            throw new Error('8-byte keys not allowed in AESKW, use AESKWP instead');\n        const out = concatBytes(AESKW_IV, plaintext);\n        AESW.encrypt(kek, out);\n        return out;\n    },\n    decrypt(ciphertext) {\n        // ciphertext must be at least 24 bytes and a multiple of 8 bytes\n        // 24 because should have at least two block (1 iv + 2).\n        // Replace with 16 to enable '8-byte keys'\n        if (ciphertext.length % 8 !== 0 || ciphertext.length < 3 * 8)\n            throw new Error('invalid ciphertext length');\n        const out = copyBytes(ciphertext);\n        AESW.decrypt(kek, out);\n        if (!equalBytes(out.subarray(0, 8), AESKW_IV))\n            throw new Error('integrity check failed');\n        out.subarray(0, 8).fill(0); // ciphertext.subarray(0, 8) === IV, but we clean it anyway\n        return out.subarray(8);\n    },\n}));\n/*\nWe don't support 8-byte keys. The rabbit hole:\n\n- Wycheproof says: \"NIST SP 800-38F does not define the wrapping of 8 byte keys.\n  RFC 3394 Section 2  on the other hand specifies that 8 byte keys are wrapped\n  by directly encrypting one block with AES.\"\n    - https://github.com/C2SP/wycheproof/blob/master/doc/key_wrap.md\n    - \"RFC 3394 specifies in Section 2, that the input for the key wrap\n      algorithm must be at least two blocks and otherwise the constant\n      field and key are simply encrypted with ECB as a single block\"\n- What RFC 3394 actually says (in Section 2):\n    - \"Before being wrapped, the key data is parsed into n blocks of 64 bits.\n      The only restriction the key wrap algorithm places on n is that n be\n      at least two\"\n    - \"For key data with length less than or equal to 64 bits, the constant\n      field used in this specification and the key data form a single\n      128-bit codebook input making this key wrap unnecessary.\"\n- Which means \"assert(n >= 2)\" and \"use something else for 8 byte keys\"\n- NIST SP800-38F actually prohibits 8-byte in \"5.3.1 Mandatory Limits\".\n  It states that plaintext for KW should be \"2 to 2^54 -1 semiblocks\".\n- So, where does \"directly encrypt single block with AES\" come from?\n    - Not RFC 3394. Pseudocode of key wrap in 2.2 explicitly uses\n      loop of 6 for any code path\n    - There is a weird W3C spec:\n      https://www.w3.org/TR/2002/REC-xmlenc-core-20021210/Overview.html#kw-aes128\n    - This spec is outdated, as admitted by Wycheproof authors\n    - There is RFC 5649 for padded key wrap, which is padding construction on\n      top of AESKW. In '4.1.2' it says: \"If the padded plaintext contains exactly\n      eight octets, then prepend the AIV as defined in Section 3 above to P[1] and\n      encrypt the resulting 128-bit block using AES in ECB mode [Modes] with key\n      K (the KEK).  In this case, the output is two 64-bit blocks C[0] and C[1]:\"\n    - Browser subtle crypto is actually crashes on wrapping keys less than 16 bytes:\n      `Error: error:1C8000E6:Provider routines::invalid input length] { opensslErrorStack: [ 'error:030000BD:digital envelope routines::update error' ]`\n\nIn the end, seems like a bug in Wycheproof.\nThe 8-byte check can be easily disabled inside of AES_W.\n*/\nconst AESKWP_IV = 0xa65959a6; // single u32le value\n/**\n * AES-KW, but with padding and allows random keys.\n * Second u32 of IV is used as counter for length.\n * [RFC 5649](https://www.rfc-editor.org/rfc/rfc5649)\n */\nexport const aeskwp = /* @__PURE__ */ wrapCipher({ blockSize: 8 }, (kek) => ({\n    encrypt(plaintext) {\n        if (!plaintext.length)\n            throw new Error('invalid plaintext length');\n        const padded = Math.ceil(plaintext.length / 8) * 8;\n        const out = new Uint8Array(8 + padded);\n        out.set(plaintext, 8);\n        const out32 = u32(out);\n        out32[0] = AESKWP_IV;\n        out32[1] = byteSwap(plaintext.length);\n        AESW.encrypt(kek, out);\n        return out;\n    },\n    decrypt(ciphertext) {\n        // 16 because should have at least one block\n        if (ciphertext.length < 16)\n            throw new Error('invalid ciphertext length');\n        const out = copyBytes(ciphertext);\n        const o32 = u32(out);\n        AESW.decrypt(kek, out);\n        const len = byteSwap(o32[1]) >>> 0;\n        const padded = Math.ceil(len / 8) * 8;\n        if (o32[0] !== AESKWP_IV || out.length - 8 !== padded)\n            throw new Error('integrity check failed');\n        for (let i = len; i < padded; i++)\n            if (out[8 + i] !== 0)\n                throw new Error('integrity check failed');\n        out.subarray(0, 8).fill(0); // ciphertext.subarray(0, 8) === IV, but we clean it anyway\n        return out.subarray(8, 8 + len);\n    },\n}));\n/** Unsafe low-level internal methods. May change at any time. */\nexport const unsafe = {\n    expandKeyLE,\n    expandKeyDecLE,\n    encrypt,\n    decrypt,\n    encryptBlock,\n    decryptBlock,\n    ctrCounter,\n    ctr32,\n};\n//# sourceMappingURL=aes.js.map","import { ByteBuffer } from './ByteBuffer.js'\nimport { sha256, sha512 } from './crypto.js'\nimport { cbc as AESCBC } from '@noble/ciphers/aes'\nimport { secp256k1 } from '@noble/curves/secp256k1'\n\nexport const encrypt = (\n  privateKey,\n  publicKey,\n  message,\n  nonce = uniqueNonce()\n) => crypt(privateKey, publicKey, nonce, message)\n\nexport const decrypt = async (privateKey, publicKey, nonce, message, checksum) => {\n  const d = await crypt(privateKey, publicKey, nonce, message, checksum)\n  return d.message\n}\n\n/**\n * @arg {Uint8Array} message - Encrypted or plain text message (see checksum)\n * @arg {number} checksum - shared secret checksum (null to encrypt, non-null to decrypt)\n */\nconst crypt = async (privateKey, publicKey, nonce, message, checksum) => {\n  const nonceL = nonce instanceof BigInt ? nonce : BigInt(nonce)\n  const S = privateKey.getSharedSecret(publicKey)\n  let ebuf = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  ebuf.writeUint64(nonceL)\n  ebuf.append(S)\n  ebuf.flip()\n\n  ebuf = new Uint8Array(ebuf.toBuffer())\n  const encryptionKey = sha512(ebuf)\n  const iv = encryptionKey.subarray(32, 48)\n  const tag = encryptionKey.subarray(0, 32)\n\n  // check if first 64 bit of sha256 hash treated as uint64_t truncated to 32 bits.\n  const check = sha256(encryptionKey).subarray(0, 4)\n  const cbuf = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  cbuf.append(check)\n  cbuf.flip()\n  const check32 = cbuf.readUint32()\n  if (checksum) {\n    if (check32 !== checksum) {\n      throw new Error('Invalid key')\n    }\n    message = await cryptoJsDecrypt(message, tag, iv)\n  } else {\n    message = await cryptoJsEncrypt(message, tag, iv)\n  }\n  return { nonce: nonceL, message, checksum: check32 }\n}\n\n/**\n * This method does not use a checksum, the returned data must be validated some other way.\n * @arg {string|Uint8Array} ciphertext - binary format\n * @return {Uint8Array} the decrypted message\n */\nconst cryptoJsDecrypt = async (message, tag, iv) => {\n  let messageBuffer = message\n  const decipher = AESCBC(tag, iv)\n  messageBuffer = await decipher.decrypt(messageBuffer)\n  // return Uint8Array.from(messageBuffer)\n  return messageBuffer\n}\n\n/**\n * This method does not use a checksum, the returned data must be validated some other way.\n * @arg {string|Uint8Array} plaintext - binary format\n * @return {Uint8Array} binary\n */\nexport const cryptoJsEncrypt = async (message, tag, iv) => {\n  let messageBuffer = message\n  const cipher = AESCBC(tag, iv)\n  messageBuffer = await cipher.encrypt(messageBuffer)\n  // return Uint8Array.from(messageBuffer)\n  return messageBuffer\n}\n\n/** @return {string} unique 64 bit unsigned number string.  Being time based,\n * this is careful to never choose the same nonce twice.  This value could\n * clsbe recorded in the blockchain for a long time.\n */\nlet uniqueNonceEntropy = null\n\nconst uniqueNonce = () => {\n  if (uniqueNonceEntropy === null) {\n    const uint8randomArr = new Uint8Array(2)\n    for (let i = 0; i < 2; ++i) {\n      uint8randomArr[i] = secp256k1.utils.randomPrivateKey().at(i)\n    }\n    uniqueNonceEntropy = Math.round(\n      (uint8randomArr[0] << 8) | uint8randomArr[1]\n    )\n  }\n  let long = BigInt(Date.now())\n  const entropy = ++uniqueNonceEntropy % 0xffff\n  long = long << BigInt(16) | BigInt(entropy)\n  return long\n}\n\n// const toLongObj = (o) => (o ? (Long.isLong(o) ? o : Long.fromString(o)) : o)\n","import { ByteBuffer } from './ByteBuffer.js'\nimport { PublicKey } from './PublicKey.js'\n\nconst PublicKeyDeserializer = (buf) => {\n  const c = fixedBuf(buf, 33)\n  return new PublicKey(c)\n}\n\nconst UInt64Deserializer = (b) => {\n  b.flip()\n  return b.readUint64()\n}\n\nconst UInt32Deserializer = (b) => {\n  b.flip()\n  return b.readUint32()\n}\n\nconst BinaryDeserializer = (b) => {\n  b.flip()\n  const len = b.readVarint32()\n  const bCopy = b.copy(b.offset, b.offset + len)\n  b.skip(len)\n  return new Uint8Array(bCopy.toBuffer())\n}\n\nconst BufferDeserializer =\n  (keyDeserializers) =>\n    (buf) => {\n      const obj = {}\n      for (const [key, deserializer] of keyDeserializers) {\n        try {\n        // Decodes a binary encoded string to a ByteBuffer.\n          const temp = new ByteBuffer(\n            ByteBuffer.DEFAULT_CAPACITY,\n            ByteBuffer.LITTLE_ENDIAN\n          )\n          buf = temp.append(buf)\n          obj[key] = deserializer(buf)\n        } catch (error) {\n          error.message = `${key}: ${error.message}`\n          throw error\n        }\n      }\n      return obj\n    }\n\nfunction fixedBuf (b, len) {\n  if (!b) {\n    throw Error('No buffer found on first parameter')\n  } else {\n    b.flip()\n    const bCopy = b.copy(b.offset, b.offset + len)\n    b.skip(len)\n    return new Uint8Array(bCopy.toBuffer())\n  }\n}\n\nconst EncryptedMemoDeserializer = BufferDeserializer([\n  ['from', PublicKeyDeserializer],\n  ['to', PublicKeyDeserializer],\n  ['nonce', UInt64Deserializer],\n  ['check', UInt32Deserializer],\n  ['encrypted', BinaryDeserializer]\n])\n\nexport const Deserializer = {\n  Memo: EncryptedMemoDeserializer\n}\n","import bs58 from 'bs58'\nimport { ByteBuffer } from './ByteBuffer.js'\nimport { Serializer } from './serializer.js'\nimport { PrivateKey } from './PrivateKey.js'\nimport * as Aes from './aes.js'\nimport { PublicKey } from './PublicKey.js'\nimport { Deserializer } from './deserializer.js'\n\n/**\n * Memo/Any message encoding using AES (aes-cbc algorithm)\n * @param {Uint8Array|string} private_key Private memo key of sender\n * @param {Uint8Array|string} public_key public memo key of recipient\n * @param {string} memo message to be encrypted\n * @param {number} testNonce nonce with high entropy\n */\nconst encode = async (privateKey, publicKey, memo, testNonce) => {\n  if (!memo.startsWith('#')) {\n    return memo\n  }\n  memo = memo.substring(1)\n  await checkEncryption()\n  privateKey = toPrivateObj(privateKey)\n  publicKey = toPublicObj(publicKey)\n  const mbuf = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  mbuf.writeVString(memo)\n  const memoBuffer = new Uint8Array(mbuf.copy(0, mbuf.offset).toBuffer())\n  const { nonce, message, checksum } = await Aes.encrypt(\n    privateKey,\n    publicKey,\n    memoBuffer,\n    testNonce\n  )\n  const mbuf2 = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  Serializer.Memo(mbuf2, {\n    check: checksum,\n    encrypted: message,\n    from: privateKey.createPublic(),\n    nonce,\n    to: publicKey\n  })\n  mbuf2.flip()\n  const data = new Uint8Array(mbuf2.toBuffer())\n  return '#' + bs58.encode(data)\n}\n\n/**\n * Encrypted memo/message decryption\n * @param {PrivateKey|string} private_key Private memo key of recipient\n * @param {string}memo Encrypted message/memo\n */\nconst decode = async (privateKey, memo) => {\n  if (!memo.startsWith('#')) {\n    return memo\n  }\n  memo = memo.substring(1)\n  await checkEncryption()\n  privateKey = toPrivateObj(privateKey)\n  memo = bs58.decode(memo)\n  let memoBuffer = Deserializer.Memo(memo)\n  const { from, to, nonce, check, encrypted } = memoBuffer\n  const pubkey = privateKey.createPublic().toString()\n  const otherpub =\n      pubkey === new PublicKey(from.key).toString()\n        ? new PublicKey(to.key)\n        : new PublicKey(from.key)\n  memoBuffer = await Aes.decrypt(privateKey, otherpub, nonce, encrypted, check)\n  const mbuf = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  mbuf.append(memoBuffer)\n  mbuf.flip()\n  return '#' + mbuf.readVString()\n}\n\nlet encodeTest\nconst checkEncryption = async () => {\n  if (encodeTest === undefined) {\n    let plaintext\n    encodeTest = true // prevent infinate looping\n    try {\n      const wif = '5JdeC9P7Pbd1uGdFVEsJ41EkEnADbbHGq6p1BwFxm6txNBsQnsw'\n      const pubkey = 'STM8m5UgaFAAYQRuaNejYdS8FVLVp9Ss3K1qAVk5de6F8s3HnVbvA'\n      const cyphertext = await encode(wif, pubkey, '#memo爱')\n      plaintext = await decode(wif, cyphertext)\n    } finally {\n      encodeTest = plaintext === '#memo爱'\n    }\n  }\n  if (encodeTest === false) {\n    throw new Error('This environment does not support encryption.')\n  }\n}\n\nconst toPrivateObj = (o) => (o ? (o.key ? o : PrivateKey.fromString(o)) : o)\nconst toPublicObj = (o) => (o ? (o.key ? o : PublicKey.fromString(o)) : o)\n\nexport const Memo = {\n  decode,\n  encode\n}\n","import { Serializer } from './serializer.js'\nimport { ByteBuffer } from './ByteBuffer.js'\n\n/** Return null for a valid username */\nexport const validateUsername = (username) => {\n  let suffix = 'Account name should '\n  if (!username) {\n    return suffix + 'not be empty.'\n  }\n  const length = username.length\n  if (length < 3) {\n    return suffix + 'be longer.'\n  }\n  if (length > 16) {\n    return suffix + 'be shorter.'\n  }\n  if (/\\./.test(username)) {\n    suffix = 'Each account segment should '\n  }\n  const ref = username.split('.')\n  const len = ref.length\n  for (let i = 0; i < len; i++) {\n    const label = ref[i]\n    if (!/^[a-z]/.test(label)) {\n      return suffix + 'start with a lowercase letter.'\n    }\n    if (!/^[a-z0-9-]*$/.test(label)) {\n      return suffix + 'have only lowercase letters, digits, or dashes.'\n    }\n    if (!/[a-z0-9]$/.test(label)) {\n      return suffix + 'end with a lowercase letter or digit.'\n    }\n    if (!(label.length >= 3)) {\n      return suffix + 'be longer'\n    }\n  }\n  return null\n}\n\nexport const operations = {\n  vote: 0,\n  comment: 1,\n  transfer: 2,\n  transfer_to_vesting: 3,\n  withdraw_vesting: 4,\n  limit_order_create: 5,\n  limit_order_cancel: 6,\n  feed_publish: 7,\n  convert: 8,\n  account_create: 9,\n  account_update: 10,\n  witness_update: 11,\n  account_witness_vote: 12,\n  account_witness_proxy: 13,\n  pow: 14,\n  custom: 15,\n  report_over_production: 16,\n  delete_comment: 17,\n  custom_json: 18,\n  comment_options: 19,\n  set_withdraw_vesting_route: 20,\n  limit_order_create2: 21,\n  claim_account: 22,\n  create_claimed_account: 23,\n  request_account_recovery: 24,\n  recover_account: 25,\n  change_recovery_account: 26,\n  escrow_transfer: 27,\n  escrow_dispute: 28,\n  escrow_release: 29,\n  pow2: 30,\n  escrow_approve: 31,\n  transfer_to_savings: 32,\n  transfer_from_savings: 33,\n  cancel_transfer_from_savings: 34,\n  custom_binary: 35,\n  decline_voting_rights: 36,\n  reset_account: 37,\n  set_reset_account: 38,\n  claim_reward_balance: 39,\n  delegate_vesting_shares: 40,\n  account_create_with_delegation: 41,\n  witness_set_properties: 42,\n  account_update2: 43,\n  create_proposal: 44,\n  update_proposal_votes: 45,\n  remove_proposal: 46,\n  update_proposal: 47,\n  collateralized_convert: 48,\n  recurrent_transfer: 49,\n  // virtual ops\n  fill_convert_request: 50,\n  author_reward: 51,\n  curation_reward: 52,\n  comment_reward: 53,\n  liquidity_reward: 54,\n  interest: 55,\n  fill_vesting_withdraw: 56,\n  fill_order: 57,\n  shutdown_witness: 58,\n  fill_transfer_from_savings: 59,\n  hardfork: 60,\n  comment_payout_update: 61,\n  return_vesting_delegation: 62,\n  comment_benefactor_reward: 63,\n  producer_reward: 64,\n  clear_null_account_balance: 65,\n  proposal_pay: 66,\n  sps_fund: 67,\n  hardfork_hive: 68,\n  hardfork_hive_restore: 69,\n  delayed_voting: 70,\n  consolidate_treasury_balance: 71,\n  effective_comment_vote: 72,\n  ineffective_delete_comment: 73,\n  sps_convert: 74,\n  expired_account_notification: 75,\n  changed_recovery_account: 76,\n  transfer_to_vesting_completed: 77,\n  pow_reward: 78,\n  vesting_shares_split: 79,\n  account_created: 80,\n  fill_collateralized_convert_request: 81,\n  system_warning: 82,\n  fill_recurrent_transfer: 83,\n  failed_recurrent_transfer: 84,\n  limit_order_cancelled: 85,\n  producer_missed: 86,\n  proposal_fee: 87,\n  collateralized_convert_immediate_conversion: 88,\n  escrow_approved: 89,\n  escrow_rejected: 90,\n  proxy_cleared: 91,\n  declined_voting_rights: 92\n}\n\n/**\n * Make bitmask filter to be used with get_account_history call\n */\nexport const makeBitMaskFilter = (allowedOperations) => {\n  return allowedOperations\n    .reduce(reduceFunction, [BigInt(0), BigInt(0)])\n    .map((value) =>\n      (value !== BigInt(0)) ? value.toString() : null\n    )\n}\nconst reduceFunction = ([low, high], allowedOperation) => {\n  if (allowedOperation < 64) {\n    return [low | (BigInt(1) << BigInt(allowedOperation)), high]\n  } else {\n    return [low, high | (BigInt(1) << BigInt(allowedOperation - 64))]\n  }\n}\n\n/**\n * Needed for witness_set_properties operation\n * Example in utils.d.ts\n */\nexport const buildWitnessSetProperties = (owner, props) => {\n  const data = {\n    extensions: [],\n    owner,\n    props: []\n  }\n  for (const key of Object.keys(props)) {\n    let type\n    switch (key) {\n      case 'key':\n      case 'new_signing_key':\n        type = Serializer.PublicKey\n        break\n      case 'account_subsidy_budget':\n      case 'account_subsidy_decay':\n      case 'maximum_block_size':\n        type = Serializer.UInt32\n        break\n      case 'hbd_interest_rate':\n        type = Serializer.UInt16\n        break\n      case 'url':\n        type = Serializer.String\n        break\n      case 'hbd_exchange_rate':\n        type = Serializer.Price\n        break\n      case 'account_creation_fee':\n        type = Serializer.Asset\n        break\n      default:\n        throw new Error(`Unknown witness prop: ${key}`)\n    }\n    data.props.push([key, serialize(type, props[key])])\n  }\n  data.props.sort((a, b) => a[0].localeCompare(b[0]))\n  return ['witness_set_properties', data]\n}\n\nconst serialize = (serializer, data) => {\n  const buffer = new ByteBuffer(\n    ByteBuffer.DEFAULT_CAPACITY,\n    ByteBuffer.LITTLE_ENDIAN\n  )\n  serializer(buffer, data)\n  buffer.flip()\n  // `props` values must be hex\n  return buffer.toString('hex')\n}\n","import { signTransaction, transactionDigest } from './transactions/signTransaction.js'\r\nimport { createTransaction } from './transactions/createTransaction.js'\r\nimport { broadcastTransaction } from './transactions/broadcastTransaction.js'\r\nimport { PrivateKey } from './helpers/PrivateKey.js'\r\nimport { PublicKey } from './helpers/PublicKey.js'\r\nimport { Signature } from './helpers/Signature.js'\r\nimport { call } from './helpers/call.js'\r\nimport { config } from './config.js'\r\nimport { Memo } from './helpers/memo.js'\r\nimport * as utils from './helpers/utils.js'\r\n\r\n/** Transaction for Hive blockchain */\r\nclass Transaction {\r\n  /** A transaction object could be passed or created later\r\n   * @param {{}} trx Object of transaction - Optional\r\n   */\r\n  constructor (trx = null) {\r\n    this.created = true\r\n    if (!trx) {\r\n      this.created = false\r\n    }\r\n    this.transaction = trx\r\n  }\r\n\r\n  /** Create the transaction by operations\r\n   * @param {[Array]} operations\r\n   * @param {Number} expiration Optional - Default 60 seconds\r\n   */\r\n  async create (operations, expiration = 60) {\r\n    this.transaction = await createTransaction(operations, expiration)\r\n    this.created = true\r\n    return this.transaction\r\n  }\r\n\r\n  /** Sign the transaction by key or keys[] (supports multi signature).\r\n   * It is also possible to sign with one key at a time for multi signature.\r\n   * @param {PrivateKey|[PrivateKey]} keys single key or multiple keys in array\r\n   */\r\n  sign (keys) {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    if (this.signedTransaction) {\r\n      const { signedTransaction, txId } = signTransaction(this.signedTransaction, keys)\r\n      this.signedTransaction = signedTransaction\r\n      this.txId = txId\r\n    } else {\r\n      const { signedTransaction, txId } = signTransaction(this.transaction, keys)\r\n      this.signedTransaction = signedTransaction\r\n      this.txId = txId\r\n    }\r\n    return this.signedTransaction\r\n  }\r\n\r\n  /** Broadcast the signed transaction. */\r\n  async broadcast (timeout = 5, retry = 5) {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    if (!this.signedTransaction) {\r\n      throw new Error('First sign the transaction by .sign(keys)')\r\n    }\r\n    const result = await broadcastTransaction(this.signedTransaction, timeout, retry)\r\n    if (result.error) {\r\n      // When we retry, we might have already broadcasted the transaction\r\n      // So catch duplicate trx error and return trx id\r\n      if (result.error.message.includes('Duplicate transaction check failed')) {\r\n        return {\r\n          id: 1,\r\n          jsonrpc: '2.0',\r\n          result: { tx_id: this.txId, status: 'unkown' }\r\n        }\r\n      }\r\n      return result\r\n    }\r\n    if (!this.txId) {\r\n      this.txId = this.digest().txId\r\n    }\r\n    return {\r\n      id: 1,\r\n      jsonrpc: '2.0',\r\n      result: { tx_id: this.txId, status: 'unkown' }\r\n    }\r\n  }\r\n\r\n  /** Return the transaction hash which can be used to verify against a signature */\r\n  digest () {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    return transactionDigest(this.transaction)\r\n  }\r\n\r\n  /**\r\n   * Add a signature to already created transaction. You can add multiple signatures to one transaction but one at a time.\r\n   * This method is used when you sign your transaction with other tools instead of built-in .sign() method.\r\n   */\r\n  addSignature (signature = '') {\r\n    if (!this.created) {\r\n      throw new Error('First create a transaction by .create(operations)')\r\n    }\r\n    if (typeof signature !== 'string') {\r\n      throw new Error('Signature must be string')\r\n    }\r\n    if (signature.length !== 130) {\r\n      throw new Error('Signature must be 130 characters long')\r\n    }\r\n    if (!this.signedTransaction) {\r\n      this.signedTransaction = { ...this.transaction }\r\n    }\r\n    if (Array.isArray(this.signedTransaction.signature)) {\r\n      this.signedTransaction.signatures.push(signature)\r\n    } else {\r\n      this.signedTransaction.signatures = [signature]\r\n    }\r\n    return this.signedTransaction\r\n  }\r\n}\r\n\r\nexport { Transaction, PrivateKey, call, config, PublicKey, Signature, Memo, utils }\r\n","import { getGlobalProps } from '../helpers/globalProps.js'\r\nimport { hexToUint8Array } from '../helpers/uint8Array.js'\r\n\r\n/** Create transaction by operations */\r\nexport const createTransaction = async (operations, exp) => {\r\n  const expireTime = exp ? 1000 * exp : 1000 * 60\r\n  const props = await getGlobalProps()\r\n  const refBlockNum = props.head_block_number & 0xffff\r\n  const uintArray = hexToUint8Array(props.head_block_id)\r\n  const refBlockPrefix =\r\n    uintArray[4] |\r\n    (uintArray[5] << 8) |\r\n    (uintArray[6] << 16) |\r\n    (uintArray[7] << 24)\r\n  const expiration = new Date(Date.now() + expireTime)\r\n    .toISOString()\r\n    .slice(0, -5)\r\n  const extensions = []\r\n  return {\r\n    expiration,\r\n    extensions,\r\n    operations,\r\n    ref_block_num: refBlockNum,\r\n    ref_block_prefix: refBlockPrefix\r\n  }\r\n}\r\n","import { call } from './call.js'\r\n\r\n/** return global properties */\r\nexport const getGlobalProps = async () => {\r\n  const res = await call('condenser_api.get_dynamic_global_properties')\r\n  if (!res) {\r\n    throw new Error(\"Couldn't resolve global properties\")\r\n  }\r\n  if (res && (!res.id || !res.result)) {\r\n    throw new Error('Bad response @ global props')\r\n  }\r\n  return res.result\r\n}\r\n","import { config } from '../config.js'\r\nimport { call } from '../helpers/call.js'\r\n\r\n/** Broadcast signed transaction */\r\nexport const broadcastTransaction = async (signedTransaction, timeout = config.timeout, retry = config.retry) => {\r\n  const result = await call('condenser_api.broadcast_transaction', [\r\n    signedTransaction\r\n  ], timeout, retry)\r\n  return result\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","this","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","Symbol","toStringTag","value","ByteBuffer","static","BIG_ENDIAN","buffer","view","offset","markedOffset","limit","littleEndian","noAssert","constructor","capacity","DEFAULT_CAPACITY","DEFAULT_ENDIAN","DEFAULT_NOASSERT","RangeError","EMPTY_BUFFER","ArrayBuffer","DataView","buffers","k","length2","i2","buf","wrap","bb","bi","Uint8Array","set","subarray","TypeError","clone","byteOffset","byteLength","toString","setUint8","readBytes","relative","slice","writeBytes","append","writeInt8","capacity0","resize","setInt8","writeByte","readInt8","getInt8","readByte","writeUint8","capacity1","writeUInt8","readUint8","getUint8","readUInt8","writeInt16","capacity2","setInt16","writeShort","readInt16","getInt16","readShort","writeUint16","capacity3","setUint16","writeUInt16","readUint16","getUint16","readUInt16","writeInt32","capacity4","setInt32","writeInt","readInt32","getInt32","readInt","writeUint32","capacity5","setUint32","writeUInt32","readUint32","getUint32","readUInt32","writeFloat32","capacity8","setFloat32","writeFloat","readFloat32","getFloat32","readFloat","writeFloat64","capacity9","setFloat64","writeDouble","readFloat64","getFloat64","readDouble","source","capacity16","appendTo","target","assert","clear","copy","compact","begin","end","copyTo","targetOffset","sourceOffset","sourceLimit","targetRelative","ensureCapacity","current","fill","charCodeAt","flip","mark","order","LE","BE","bigEndian","prepend","diff","prependTo","remaining","reset","reverse","skip","writeInt64","BigInt","capacity6","setBigInt64","writeLong","readInt64","getBigInt64","readLong","writeUint64","capacity7","setBigUint64","writeUInt64","readUint64","getBigUint64","readUInt64","toBuffer","forceCopy","toArrayBuffer","writeVarint32","size","calculateVarint32","b","capacity10","readVarint32","c","err","truncated","writeVString","str","start","utfx","calculateUTF16asUTF8","stringSource","l","capacity15","encodeUTF16toUTF8","bind","readVString","readUTF8String","METRICS_BYTES","string","metrics","METRICS_CHARS","sd","stringDestination","decodeUTF8","cp","UTF8toUTF16","decodeUTF8toUTF16","cs","ps","join","stringFromCharCode","String","fromCharCode","s","src","dst","a","fail","indexOf","bytes","c1","c2","UTF16toUTF8","encodeUTF8","n","config","node","chain_id","address_prefix","axiosAdapter","retry","healthcheckInterval","anumber","Number","isSafeInteger","lengths","isView","includes","aexists","instance","checkFinished","destroyed","finished","globalThis","crypto","createView","arr","rotr","word","shift","rotl","toBytes","data","TextEncoder","encode","utf8ToBytes","Hash","_cloneInto","hashCons","hashC","msg","update","digest","tmp","outputLen","blockLen","create","bytesLength","getRandomValues","randomBytes","Maj","HashMD","padOffset","isLE","super","pos","take","Math","min","dataView","roundClean","digestInto","out","aoutput","_32n","_u32_max","wh","wl","h","oview","outLen","state","res","destroy","to","SHA256_K","Uint32Array","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","W15","W2","s0","s1","T1","T2","U32_MASK64","fromBig","le","lst","Ah","Al","_l","Bh","Bl","Cl","low","Ch","Dl","Dh","Eh","El","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","Rho","Id","_","idxL","idxR","j","shifts","shiftsL","idx","shiftsR","Kl","Kr","f","group","x","y","z","R_BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","tr","ripemd160","input","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","isArray","from","pbegin","pend","b58","it1","it2","repeat","decode","HMAC","hash","_key","ahash","iHash","pad","oHash","getPrototypeOf","hmac","message","_0n","_1n","_2n","item","abool","padStart","hex","numberToHexUnpadded","num","hexToNumber","_0","_9","ch","hl","ai","hi","n1","n2","char","numberToBytesLE","expectedLength","arrays","sum","isPosBig","max","bitLen","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","reseed","seed","gen","pred","validatorFns","bigint","val","function","boolean","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","entries","memoized","fn","WeakMap","arg","computed","_3n","_4n","_5n","_8n","result","pow","power","modulo","pow2","invert","number","u","q","m","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","ORDER","redef","BITS","BYTES","sqrtP","freeze","MASK","ZERO","ONE","is0","isOdd","neg","eql","lhs","rhs","sqr","add","sub","mul","p","FpPow","div","sqrN","addN","subN","mulN","inv","sqrt","P","p1div4","nv","legendreC","Q","S","Z","Q1div2","g","t2","ge","tonelliShanks","FpSqrt","invertBatch","nums","lastMultiplied","reduce","acc","inverted","reduceRight","FpInvertBatch","cmov","fromBytes","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","constTimeNegate","condition","negate","validateW","W","bits","calcWOpts","windows","windowSize","pointPrecomputes","pointWindowSizes","getW","validateBasic","curve","Gx","Gy","validateSigVerOpts","opts","lowS","prehash","b2n","h2b","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","first","lengthBytes","_int","parseInt","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","sig","seq","weierstrassPoints","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","Fn","_c","point","_isCompressed","toAffine","tail","weierstrassEquation","x2","x3","normPrivateKeyToScalar","N","error","assertPrjPoint","other","Point","toAffineMemo","iz","px","py","pz","ax","ay","zz","assertValidMemo","left","right","fromAffine","normalizeZ","points","toInv","fromHex","assertValidity","fromPrivateKey","privateKey","multiply","msm","scalars","fieldN","forEach","validateMSMPoints","validateMSMScalars","zero","wbits","buckets","floor","scalar","resI","sumI","double","pippenger","_setWindowSize","wnaf","setWindowSize","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wNAF","wNAFCached","multiplyUnsafe","sc","I","hasPrecomputes","wNAFCachedUnsafe","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","cofactor","toRawBytes","isCompressed","toHex","_bits","elm","unsafeLadder","precomputeWindow","base","window","precomputes","mask","maxNumber","shiftBy","offset1","offset2","abs","cond1","cond2","wNAFUnsafe","curr","getPrecomputes","transform","comp","prev","delete","ProjectivePoint","isWithinCurveOrder","weierstrass","curveDef","bits2int","bits2int_modN","validateOpts","compressedLen","uncompressedLen","modN","CURVE_ORDER","invN","cat","head","y2","sqrtError","suffix","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","R","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","mapHashToField","precompute","isProbPub","delta","ORDER_MASK","int2octets","defaultSigOpts","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","k2sig","some","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","verify","signature","publicKey","sg","format","isHex","isObj","_sig","derError","is","getHash","msgs","secp256k1P","secp256k1N","divNearest","Fpk1","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","DEFAULT_ADDRESS_PREFIX","PublicKey","fromString","wif","decodePublic","encodePublic","toJSON","inspect","checksum","encodedKey","Asset","expectedSymbol","amountString","symbol","split","amount","parseFloat","isFinite","getPrecision","toFixed","hexToUint8Array","hexString","substr","uint8ArrayToHex","uint8Array","byte","HexBuffer","encoding","VoidSerializer","StringSerializer","Int16Serializer","Int64Serializer","UInt16Serializer","UInt32Serializer","UInt64Serializer","BooleanSerializer","StaticVariantSerializer","itemSerializers","id","AssetSerializer","asset","precision","round","DateSerializer","Date","getTime","PublicKeySerializer","BinarySerializer","VariableBinarySerializer","FlatMapSerializer","keySerializer","valueSerializer","ArraySerializer","itemSerializer","ObjectSerializer","keySerializers","serializer","OptionalSerializer","AuthoritySerializer","BeneficiarySerializer","PriceSerializer","SignedBlockHeaderSerializer","ChainPropertiesSerializer","OperationDataSerializer","operationId","definitions","objectSerializer","OperationSerializers","account_create","account_create_with_delegation","account_update","account_witness_proxy","account_witness_vote","cancel_transfer_from_savings","change_recovery_account","claim_account","claim_reward_balance","comment","comment_options","convert","create_claimed_account","custom","custom_binary","custom_json","decline_voting_rights","delegate_vesting_shares","delete_comment","escrow_approve","escrow_dispute","escrow_release","escrow_transfer","feed_publish","limit_order_cancel","limit_order_create","limit_order_create2","recover_account","report_over_production","request_account_recovery","reset_account","set_reset_account","set_withdraw_vesting_route","transfer","transfer_from_savings","transfer_to_savings","transfer_to_vesting","vote","withdraw_vesting","witness_update","witness_set_properties","account_update2","create_proposal","update_proposal_votes","remove_proposal","ProposalUpdateSerializer","update_proposal","collateralized_convert","recurrent_transfer","OperationSerializer","operation","TransactionSerializer","EncryptedMemoSerializer","Serializer","Authority","Binary","Boolean","FlatMap","Int16","Int32","Int64","Int8","Memo","Operation","Optional","Price","StaticVariant","Transaction","UInt16","UInt32","UInt64","UInt8","Void","CHAIN_ID","signTransaction","transaction","keys","txId","transactionDigest","signedTransaction","signatures","customToString","chainId","LITTLE_ENDIAN","temp","cause","transactionData","thisArg","kindOf","cache","thing","toLowerCase","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","allOwnKeys","getOwnPropertyNames","findKey","_global","self","global","isContextDefined","context","isTypedArray","TypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","postMessage","token","random","callbacks","addEventListener","cb","asap","queueMicrotask","isBuffer","isFormData","kind","FormData","isArrayBufferView","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","trim","replace","stripBOM","content","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","lastIndex","toArray","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","writable","toObjectSet","arrayOrString","delimiter","toCamelCase","p1","p2","toUpperCase","toFiniteNumber","defaultValue","isSpecCompliantForm","toJSONObject","stack","visit","reducedValue","isThenable","then","catch","AxiosError","code","request","response","captureStackTrace","status","description","fileName","lineNumber","columnNumber","customProps","axiosError","isVisitable","removeBrackets","renderKey","path","dots","predicates","test","formData","options","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","JSON","stringify","isFlatArray","index","exposedHelpers","build","pop","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serialize","serializeFn","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","rawValue","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","parser","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","normalized","w","formatHeader","targets","asStrings","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","timestamps","firstSampleTS","chunkLength","now","startedAt","bytesCount","passed","lastArgs","timer","timestamp","threshold","invoke","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","isMSIE","URL","protocol","host","port","userAgent","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","password","unescape","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","Promise","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","trackStream","stream","onProgress","onFinish","async","iterable","asyncIterator","reader","getReader","readStream","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","ERR_NOT_SUPPORT","fetchOptions","composedSignal","toAbortSignal","requestContentLength","getContentLength","_request","getBodyLength","resolveBodyLength","contentTypeHeader","flush","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","deprecatedWarnings","validator","formatMessage","opt","desc","ERR_DEPRECATED","console","warn","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","VERSION","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","nodeIndex","numTries","jsonrpc","callWithTimeout","changeNode","conf","timerId","resolved","post","finally","rest","Headers","json","fromEntries","newNodeIndex","tries","healthcheck","setInterval","unref","compressed","NETWORK_ID","PrivateKey","decodePrivate","fromSeed","fromLogin","role","rv","createPublic","encodePrivate","randomKey","copyBytes","complexOverlapBytes","output","wrapCipher","wrappedCipher","nonceLength","nonce","varSizeNonce","tagl","tagLength","cipher","checkOutput","fnLength","called","encrypt","decrypt","getOutput","onlyAligned","isAligned32","clean","BLOCK_SIZE","ZEROS16","ZEROS32","swapLE","GHASH","s2","s3","kView","k0","k3","doubles","items","d0","d1","d2","d3","t","_updateBlock","o0","o1","o2","o3","bytePos","bitPos","bit","e0","e1","e2","e3","b32","blocks","o32","Polyval","ghKey","hiBit","_toGHASHKey","wrapConstructorWithKey","sbox","box","invSbox","rotl32_8","genTtable","T0","T3","T01","T23","sbox2","Uint16Array","tableEncoding","tableDecoding","xPowers","expandKeyLE","toClean","k32","Nk","subByte","applySbox","xk","apply0123","rounds","cbc","blockSize","iv","pcks5","disablePadding","plaintext","_out","validateBlockEncrypt","_iv","n32","tmp32","paddingByte","padPCKS","ciphertext","validateBlockDecrypt","encKey","expandKeyDecLE","ps0","ps1","ps2","ps3","lastByte","validatePCKS","crypt","nonceL","ebuf","encryptionKey","check","cbuf","check32","cryptoJsDecrypt","cryptoJsEncrypt","messageBuffer","decipher","uniqueNonceEntropy","PublicKeyDeserializer","bCopy","fixedBuf","keyDeserializers","Deserializer","deserializer","memo","testNonce","startsWith","checkEncryption","toPrivateObj","toPublicObj","mbuf","memoBuffer","uint8randomArr","at","long","entropy","uniqueNonce","mbuf2","encrypted","otherpub","encodeTest","pubkey","cyphertext","validateUsername","ref","label","operations","fill_convert_request","author_reward","curation_reward","comment_reward","liquidity_reward","interest","fill_vesting_withdraw","fill_order","shutdown_witness","fill_transfer_from_savings","hardfork","comment_payout_update","return_vesting_delegation","comment_benefactor_reward","producer_reward","clear_null_account_balance","proposal_pay","sps_fund","hardfork_hive","hardfork_hive_restore","delayed_voting","consolidate_treasury_balance","effective_comment_vote","ineffective_delete_comment","sps_convert","expired_account_notification","changed_recovery_account","transfer_to_vesting_completed","pow_reward","vesting_shares_split","account_created","fill_collateralized_convert_request","system_warning","fill_recurrent_transfer","failed_recurrent_transfer","limit_order_cancelled","producer_missed","proposal_fee","collateralized_convert_immediate_conversion","escrow_approved","escrow_rejected","proxy_cleared","declined_voting_rights","makeBitMaskFilter","allowedOperations","reduceFunction","high","allowedOperation","buildWitnessSetProperties","owner","extensions","sort","localeCompare","trx","created","expiration","exp","expireTime","getGlobalProps","refBlockNum","head_block_number","uintArray","head_block_id","refBlockPrefix","ref_block_num","ref_block_prefix","createTransaction","broadcast","broadcastTransaction","tx_id","addSignature"],"sourceRoot":""}